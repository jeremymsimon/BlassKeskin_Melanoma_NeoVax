[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Blass & Keskin (2025): Melanoma NeoVax analysis: PBMC bulk TCRseq",
    "section": "",
    "text": "Introduction\nThis is a book that contains all code to reproduce figures related to bulkTCRseq analysis of PBMC data associated with Blass & Keskin, et al (2025)\nNote that while the code is identical, this book was rendered after final manuscript figures were generated and thus minor differences may arise, particularly for steps that are non-deterministic or rely on random number generators.",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "index.html#enhanced-adjuvanticity-of-a-personal-neoantigen-vaccine-generates-potent-immunity-in-melanoma",
    "href": "index.html#enhanced-adjuvanticity-of-a-personal-neoantigen-vaccine-generates-potent-immunity-in-melanoma",
    "title": "Blass & Keskin (2025): Melanoma NeoVax analysis: PBMC bulk TCRseq",
    "section": "Enhanced adjuvanticity of a personal neoantigen vaccine generates potent immunity in melanoma",
    "text": "Enhanced adjuvanticity of a personal neoantigen vaccine generates potent immunity in melanoma\nEryn Blass, Derin B. Keskin, Chloe R. Tu, Cleo Forman, Allison Vanasse, Haley E. Sax, Bohoon Shim, Vipheaviny Chea, Nawoo Kim, Isabel Carulli, Jackson Southard, Haoxiang Lyu, Wesley Lu, Micah Rickles-Young, Alexander B. Afeyan, Oriol Olive, Ambica Mehndiratta, Haley Greenslade, Keerthi Shetty, Joanna Baginska, Ilana Gomez-Diaz, Allison Nau, Kathleen L. Pfaff, Andrew Gans, Elizabeth I Buchbinder, Tamara A. Sussman, Megan L Insco, Charles H. Yoon, Scott J. Rodig, Sachet A. Shukla, Shuqiang Li, Jon C. Aster, David A. Braun, Carrie Cibulskis, Nir Hacohen, Donna S. Neuberg, A Giobbie-Hurder, Kenneth J. Livak, Edward F. Fritsch, Giacomo Oliveira, Jeremy M. Simon, Catherine J. Wu, Patrick A. Ott\n\nAbstract\nPersonalized neoantigen-targeting vaccines have great promise, but current delivery strategies are suboptimal. Since antigen availability and effective T cell priming are critical for maximal immunogenicity, we tested a synthetic long peptide vaccine formulated with Montanide, poly-ICLC, and locally administered ipilimumab in addition to systemic nivolumab in 10 patients with melanoma. These personalized vaccines generated de novo ex vivo T cell responses against the majority of immunizing neoepitopes in all 9 fully vaccinated patients, and ex vivo CD8+ T cell responses in 6 of 9. Vaccination induced hundreds of circulating and intratumoral T cell receptor (TCR) clonotypes that were distinct from those arising after PD-1 inhibition. By linking the vaccine neoantigen specificity of T cell clonotypes with single cell phenotypes in tumors, we demonstrate remodeling of the intratumoral T cell repertoire following vaccination. These observations show that multi-pronged immune adjuvanticity can boost T cell responses to neoantigen-targeting vaccines",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_Clone_Frequency_3B_S5A.html",
    "href": "PBMC_bulkTCR_Plot_Clone_Frequency_3B_S5A.html",
    "title": "1  bulkTCRseq: Plot the frequency of all clones",
    "section": "",
    "text": "1.1 Set up workspace\n# Libraries\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(Seurat)\n\nLoading required package: SeuratObject\nLoading required package: sp\n\nAttaching package: 'SeuratObject'\n\nThe following objects are masked from 'package:base':\n\n    intersect, t\n\nlibrary(dplyr)\nlibrary(scRepertoire)",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>bulkTCRseq: Plot the frequency of all clones</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_Clone_Frequency_3B_S5A.html#objects-for-the-lod-lines",
    "href": "PBMC_bulkTCR_Plot_Clone_Frequency_3B_S5A.html#objects-for-the-lod-lines",
    "title": "1  bulkTCRseq: Plot the frequency of all clones",
    "section": "1.2 Objects for the LOD lines",
    "text": "1.2 Objects for the LOD lines\n\nindiv_lod_line &lt;- geom_hline(yintercept = 0.0001, linetype = \"dashed\", color = \"red\")",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>bulkTCRseq: Plot the frequency of all clones</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_Clone_Frequency_3B_S5A.html#load-pbmc-data",
    "href": "PBMC_bulkTCR_Plot_Clone_Frequency_3B_S5A.html#load-pbmc-data",
    "title": "1  bulkTCRseq: Plot the frequency of all clones",
    "section": "1.3 Load PBMC data",
    "text": "1.3 Load PBMC data\n\np101_betas_typed &lt;- read.csv(\"p101_betas_merged_typed_full_Part3.csv\")\np103_betas_typed &lt;- read.csv(\"p103_betas_merged_typed_full_Part3.csv\")\np104_betas_typed &lt;- read.csv(\"p104_betas_merged_typed_full_Part3.csv\")\np105_betas_typed &lt;- read.csv(\"p105_betas_merged_typed_full_Part3.csv\")\np106_betas_typed &lt;- read.csv(\"p106_betas_merged_typed_full_Part3.csv\")\np108_betas_typed &lt;- read.csv(\"p108_betas_merged_typed_full_Part3.csv\")\np109_betas_typed &lt;- read.csv(\"p109_betas_merged_typed_full_Part3.csv\")\np110_betas_typed &lt;- read.csv(\"p110_betas_merged_typed_full_Part3.csv\")\np111_betas_typed &lt;- read.csv(\"p111_betas_merged_typed_full_Part3.csv\")",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>bulkTCRseq: Plot the frequency of all clones</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_Clone_Frequency_3B_S5A.html#massage-data-for-frequency-lineplot-with-4-tcr-types",
    "href": "PBMC_bulkTCR_Plot_Clone_Frequency_3B_S5A.html#massage-data-for-frequency-lineplot-with-4-tcr-types",
    "title": "1  bulkTCRseq: Plot the frequency of all clones",
    "section": "1.4 Massage data for frequency lineplot with 4 TCR types",
    "text": "1.4 Massage data for frequency lineplot with 4 TCR types\n\np101_lineplot_data &lt;- p101_betas_typed %&gt;%\n  select(c(Beta_clonotype, p101_pretreatment, p101_prevax, p101_postvax, Type)) %&gt;%\n  dplyr::rename(\"Pre-treatment\" = \"p101_pretreatment\", \"Pre-vaccine\" = \"p101_prevax\", \"Post-vaccine\" = \"p101_postvax\") %&gt;% \n  pivot_longer(!c(Beta_clonotype, Type), names_to = \"Timepoint\", values_to = \"Frequency\") %&gt;%\n  mutate(Frequency = replace_na(Frequency, 0),\n         Timepoint = factor(Timepoint, levels = c(\"Pre-treatment\", \"Pre-vaccine\", \"Post-vaccine\")),\n         Type = factor(Type, levels = c(\"Other\", \"Existing\", \"Post-Nivolumab\", \"Post-Vaccine\")),\n         Beta_clonotype = forcats::fct_reorder(as.factor(Beta_clonotype), rank(Type)))\n\np103_lineplot_data &lt;- p103_betas_typed %&gt;%\n  select(c(Beta_clonotype, p103_pretreatment, p103_prevax, p103_postvax, p103_w48, p103_w72, Type)) %&gt;%\n  dplyr::rename(\"Pre-treatment\" = \"p103_pretreatment\", \"Pre-vaccine\" = \"p103_prevax\", \"Post-vaccine\" = \"p103_postvax\", \"W48\" = \"p103_w48\", \"W72\" = \"p103_w72\") %&gt;% \n  pivot_longer(!c(Beta_clonotype, Type), names_to = \"Timepoint\", values_to = \"Frequency\") %&gt;%\n  mutate(Frequency = replace_na(Frequency, 0),\n         Timepoint = factor(Timepoint, levels = c(\"Pre-treatment\", \"Pre-vaccine\", \"Post-vaccine\", \"W48\", \"W72\")),\n         Type = factor(Type, levels = c(\"Other\", \"Existing\", \"Post-Nivolumab\", \"Post-Vaccine\")),\n         Beta_clonotype = forcats::fct_reorder(as.factor(Beta_clonotype), rank(Type)))\n\np104_lineplot_data &lt;- p104_betas_typed %&gt;%\n  select(c(Beta_clonotype, p104_pretreatment, p104_prevax, p104_postvax, p104_w48, Type)) %&gt;%\n  dplyr::rename(\"Pre-treatment\" = \"p104_pretreatment\", \"Pre-vaccine\" = \"p104_prevax\", \"Post-vaccine\" = \"p104_postvax\", \"W48\" = \"p104_w48\") %&gt;% \n  pivot_longer(!c(Beta_clonotype, Type), names_to = \"Timepoint\", values_to = \"Frequency\") %&gt;%\n  mutate(Frequency = replace_na(Frequency, 0),\n         Timepoint = factor(Timepoint, levels = c(\"Pre-treatment\", \"Pre-vaccine\", \"Post-vaccine\", \"W48\")),\n         Type = factor(Type, levels = c(\"Other\", \"Existing\", \"Post-Nivolumab\", \"Post-Vaccine\")),\n         Beta_clonotype = forcats::fct_reorder(as.factor(Beta_clonotype), rank(Type)))\n\np105_lineplot_data &lt;- p105_betas_typed %&gt;%\n  select(c(Beta_clonotype, p105_pretreatment, p105_prevax, p105_postvax, p105_w48, Type)) %&gt;%\n  dplyr::rename(\"Pre-treatment\" = \"p105_pretreatment\", \"Pre-vaccine\" = \"p105_prevax\", \"Post-vaccine\" = \"p105_postvax\", \"W48\" = \"p105_w48\") %&gt;% \n  pivot_longer(!c(Beta_clonotype, Type), names_to = \"Timepoint\", values_to = \"Frequency\") %&gt;%\n  mutate(Frequency = replace_na(Frequency, 0),\n         Timepoint = factor(Timepoint, levels = c(\"Pre-treatment\", \"Pre-vaccine\", \"Post-vaccine\", \"W48\")),\n         Type = factor(Type, levels = c(\"Other\", \"Existing\", \"Post-Nivolumab\", \"Post-Vaccine\")),\n         Beta_clonotype = forcats::fct_reorder(as.factor(Beta_clonotype), rank(Type)))\n\np106_lineplot_data &lt;- p106_betas_typed %&gt;%\n  select(c(Beta_clonotype, p106_pretreatment, p106_prevax, p106_postvax, p106_w48, Type)) %&gt;%\n  dplyr::rename(\"Pre-treatment\" = \"p106_pretreatment\", \"Pre-vaccine\" = \"p106_prevax\", \"Post-vaccine\" = \"p106_postvax\", \"W48\" = \"p106_w48\") %&gt;% \n  pivot_longer(!c(Beta_clonotype, Type), names_to = \"Timepoint\", values_to = \"Frequency\") %&gt;%\n  mutate(Frequency = replace_na(Frequency, 0),\n         Timepoint = factor(Timepoint, levels = c(\"Pre-treatment\", \"Pre-vaccine\", \"Post-vaccine\", \"W48\")),\n         Type = factor(Type, levels = c(\"Other\", \"Existing\", \"Post-Nivolumab\", \"Post-Vaccine\")),\n         Beta_clonotype = forcats::fct_reorder(as.factor(Beta_clonotype), rank(Type)))\n\np108_lineplot_data &lt;- p108_betas_typed %&gt;%\n  select(c(Beta_clonotype, p108_pretreatment, p108_prevax, p108_postvax, p108_w32, Type)) %&gt;%\n  dplyr::rename(\"Pre-treatment\" = \"p108_pretreatment\", \"Pre-vaccine\" = \"p108_prevax\", \"Post-vaccine\" = \"p108_postvax\", \"W32\" = \"p108_w32\") %&gt;% \n  pivot_longer(!c(Beta_clonotype, Type), names_to = \"Timepoint\", values_to = \"Frequency\") %&gt;%\n  mutate(Frequency = replace_na(Frequency, 0),\n         Timepoint = factor(Timepoint, levels = c(\"Pre-treatment\", \"Pre-vaccine\", \"Post-vaccine\", \"W32\")),\n         Type = factor(Type, levels = c(\"Other\", \"Existing\", \"Post-Nivolumab\", \"Post-Vaccine\")),\n         Beta_clonotype = forcats::fct_reorder(as.factor(Beta_clonotype), rank(Type)))\n\np109_lineplot_data &lt;- p109_betas_typed %&gt;%\n  select(c(Beta_clonotype, p109_pretreatment, p109_prevax, p109_postvax, p109_w48, Type)) %&gt;%\n  dplyr::rename(\"Pre-treatment\" = \"p109_pretreatment\", \"Pre-vaccine\" = \"p109_prevax\", \"Post-vaccine\" = \"p109_postvax\", \"W48\" = \"p109_w48\") %&gt;% \n  pivot_longer(!c(Beta_clonotype, Type), names_to = \"Timepoint\", values_to = \"Frequency\") %&gt;%\n  mutate(Frequency = replace_na(Frequency, 0),\n         Timepoint = factor(Timepoint, levels = c(\"Pre-treatment\", \"Pre-vaccine\", \"Post-vaccine\", \"W48\")),\n         Type = factor(Type, levels = c(\"Other\", \"Existing\", \"Post-Nivolumab\", \"Post-Vaccine\")),\n         Beta_clonotype = forcats::fct_reorder(as.factor(Beta_clonotype), rank(Type)))\n\np110_lineplot_data &lt;- p110_betas_typed %&gt;%\n  select(c(Beta_clonotype, p110_pretreatment, p110_prevax, p110_postvax, p110_w38, Type)) %&gt;%\n  dplyr::rename(\"Pre-treatment\" = \"p110_pretreatment\", \"Pre-vaccine\" = \"p110_prevax\", \"Post-vaccine\" = \"p110_postvax\", \"W38\" = \"p110_w38\") %&gt;% \n  pivot_longer(!c(Beta_clonotype, Type), names_to = \"Timepoint\", values_to = \"Frequency\") %&gt;%\n  mutate(Frequency = replace_na(Frequency, 0),\n         Timepoint = factor(Timepoint, levels = c(\"Pre-treatment\", \"Pre-vaccine\", \"Post-vaccine\", \"W38\")),\n         Type = factor(Type, levels = c(\"Other\", \"Existing\", \"Post-Nivolumab\", \"Post-Vaccine\")),\n         Beta_clonotype = forcats::fct_reorder(as.factor(Beta_clonotype), rank(Type)))\n\np111_lineplot_data &lt;- p111_betas_typed %&gt;%\n  select(c(Beta_clonotype, p111_pretreatment, p111_prevax, p111_postvax, p111_w40,  Type)) %&gt;%\n  dplyr::rename(\"Pre-treatment\" = \"p111_pretreatment\", \"Pre-vaccine\" = \"p111_prevax\", \"Post-vaccine\" = \"p111_postvax\", \"W40\" = \"p111_w40\") %&gt;% \n  pivot_longer(!c(Beta_clonotype, Type), names_to = \"Timepoint\", values_to = \"Frequency\") %&gt;%\n  mutate(Frequency = replace_na(Frequency, 0),\n         Timepoint = factor(Timepoint, levels = c(\"Pre-treatment\", \"Pre-vaccine\", \"Post-vaccine\", \"W40\")),\n         Type = factor(Type, levels = c(\"Other\", \"Existing\", \"Post-Nivolumab\", \"Post-Vaccine\")),\n         Beta_clonotype = forcats::fct_reorder(as.factor(Beta_clonotype), rank(Type)))",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>bulkTCRseq: Plot the frequency of all clones</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_Clone_Frequency_3B_S5A.html#plot-frequency-over-time-across-4-tcr-types-in-p101-and-p103",
    "href": "PBMC_bulkTCR_Plot_Clone_Frequency_3B_S5A.html#plot-frequency-over-time-across-4-tcr-types-in-p101-and-p103",
    "title": "1  bulkTCRseq: Plot the frequency of all clones",
    "section": "1.5 Plot frequency over time across 4 TCR types in P101 and P103",
    "text": "1.5 Plot frequency over time across 4 TCR types in P101 and P103\n\np101_lp &lt;- p101_lineplot_data %&gt;%\n  ggplot(aes(x = Timepoint, y = Frequency, color = Type, group = Beta_clonotype)) +\n  geom_line() +\n  scale_color_manual(values = c(\"grey90\", \"grey70\", \"darkgoldenrod3\", \"#0072B2\")) +\n  scale_y_log10() +\n  annotation_logticks(sides = \"l\") +\n  ggtitle(\"P101\") +\n  theme_classic() +\n  theme(plot.title = element_text(hjust=0.5)) +\n  indiv_lod_line +\n  annotate(\"text\", x = as.numeric(p101_lineplot_data$Timepoint[[3]]) + 0.25, y = 0.00013, label = \"LOD\", size = 4, color = \"red\")\n\np103_lp &lt;- p103_lineplot_data %&gt;%\n  ggplot(aes(x = Timepoint, y = Frequency, color = Type, group = Beta_clonotype)) +\n  geom_line() +\n  scale_color_manual(values = c(\"grey90\", \"grey70\", \"darkgoldenrod3\", \"#0072B2\")) +\n  scale_y_log10() +\n  annotation_logticks(sides = \"l\") +\n  ggtitle(\"P103\") +\n  theme_classic() +\n  theme(plot.title = element_text(hjust=0.5)) +\n  indiv_lod_line +\n  annotate(\"text\", x = as.numeric(p103_lineplot_data$Timepoint[[5]]) + 0.25, y = 0.00013, label = \"LOD\", size = 4, color = \"red\")\n\np104_lp &lt;- p104_lineplot_data %&gt;%\n  ggplot(aes(x = Timepoint, y = Frequency, color = Type, group = Beta_clonotype)) +\n  geom_line() +\n  scale_color_manual(values = c(\"grey90\", \"grey70\", \"darkgoldenrod3\", \"#0072B2\")) +\n  scale_y_log10() +\n  annotation_logticks(sides = \"l\") +\n  ggtitle(\"P104\") +\n  theme_classic() +\n  theme(plot.title = element_text(hjust=0.5)) +\n  indiv_lod_line +\n  annotate(\"text\", x = as.numeric(p104_lineplot_data$Timepoint[[4]]) + 0.25, y = 0.00013, label = \"LOD\", size = 4, color = \"red\")\n\np105_lp &lt;- p105_lineplot_data %&gt;%\n  ggplot(aes(x = Timepoint, y = Frequency, color = Type, group = Beta_clonotype)) +\n  geom_line() +\n  scale_color_manual(values = c(\"grey90\", \"grey70\", \"darkgoldenrod3\", \"#0072B2\")) +\n  scale_y_log10() +\n  annotation_logticks(sides = \"l\") +\n  ggtitle(\"P105\") +\n  theme_classic() +\n  theme(plot.title = element_text(hjust=0.5)) +\n  indiv_lod_line +\n  annotate(\"text\", x = as.numeric(p105_lineplot_data$Timepoint[[4]]) + 0.25, y = 0.00013, label = \"LOD\", size = 4, color = \"red\")\n\np106_lp &lt;- p106_lineplot_data %&gt;%\n  ggplot(aes(x = Timepoint, y = Frequency, color = Type, group = Beta_clonotype)) +\n  geom_line() +\n  scale_color_manual(values = c(\"grey90\", \"grey70\", \"darkgoldenrod3\", \"#0072B2\")) +\n  scale_y_log10() +\n  annotation_logticks(sides = \"l\") +\n  ggtitle(\"P106\") +\n  theme_classic() +\n  theme(plot.title = element_text(hjust=0.5)) +\n  indiv_lod_line +\n  annotate(\"text\", x = as.numeric(p106_lineplot_data$Timepoint[[4]]) + 0.25, y = 0.00013, label = \"LOD\", size = 4, color = \"red\")\n\np108_lp &lt;- p108_lineplot_data %&gt;%\n  ggplot(aes(x = Timepoint, y = Frequency, color = Type, group = Beta_clonotype)) +\n  geom_line() +\n  scale_color_manual(values = c(\"grey90\", \"grey70\", \"darkgoldenrod3\", \"#0072B2\")) +\n  scale_y_log10() +\n  annotation_logticks(sides = \"l\") +\n  ggtitle(\"P108\") +\n  theme_classic() +\n  theme(plot.title = element_text(hjust=0.5)) +\n  indiv_lod_line +\n  annotate(\"text\", x = as.numeric(p108_lineplot_data$Timepoint[[4]]) + 0.25, y = 0.00013, label = \"LOD\", size = 4, color = \"red\")\n\np109_lp &lt;- p109_lineplot_data %&gt;%\n  ggplot(aes(x = Timepoint, y = Frequency, color = Type, group = Beta_clonotype)) +\n  geom_line() +\n  scale_color_manual(values = c(\"grey90\", \"grey70\", \"darkgoldenrod3\", \"#0072B2\")) +\n  scale_y_log10() +\n  annotation_logticks(sides = \"l\") +\n  ggtitle(\"P109\") +\n  theme_classic() +\n  theme(plot.title = element_text(hjust=0.5)) +\n  indiv_lod_line +\n  annotate(\"text\", x = as.numeric(p109_lineplot_data$Timepoint[[4]]) + 0.25, y = 0.00013, label = \"LOD\", size = 4, color = \"red\")\n\np110_lp &lt;- p110_lineplot_data %&gt;%\n  ggplot(aes(x = Timepoint, y = Frequency, color = Type, group = Beta_clonotype)) +\n  geom_line() +\n  scale_color_manual(values = c(\"grey90\", \"grey70\", \"darkgoldenrod3\", \"#0072B2\")) +\n  scale_y_log10() +\n  annotation_logticks(sides = \"l\") +\n  ggtitle(\"P110\") +\n  theme_classic() +\n  theme(plot.title = element_text(hjust=0.5)) +\n  indiv_lod_line +\n  annotate(\"text\", x = as.numeric(p110_lineplot_data$Timepoint[[4]]) + 0.25, y = 0.00013, label = \"LOD\", size = 4, color = \"red\")\n\np111_lp &lt;- p111_lineplot_data %&gt;%\n  ggplot(aes(x = Timepoint, y = Frequency, color = Type, group = Beta_clonotype)) +\n  geom_line() +\n  scale_color_manual(values = c(\"grey90\", \"grey70\", \"darkgoldenrod3\", \"#0072B2\")) +\n  scale_y_log10() +\n  annotation_logticks(sides = \"l\") +\n  ggtitle(\"P111\") +\n  theme_classic() +\n  theme(plot.title = element_text(hjust=0.5)) +\n  indiv_lod_line +\n  annotate(\"text\", x = as.numeric(p111_lineplot_data$Timepoint[[4]]) + 0.25, y = 0.00013, label = \"LOD\", size = 4, color = \"red\")",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>bulkTCRseq: Plot the frequency of all clones</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_Clone_Frequency_3B_S5A.html#save-p103s-lineplot-as-fig-3b",
    "href": "PBMC_bulkTCR_Plot_Clone_Frequency_3B_S5A.html#save-p103s-lineplot-as-fig-3b",
    "title": "1  bulkTCRseq: Plot the frequency of all clones",
    "section": "1.6 Save P103’s lineplot as Fig 3B",
    "text": "1.6 Save P103’s lineplot as Fig 3B\n\np103_lp +\n  annotate(\"segment\", x = as.numeric(p103_lineplot_data$Timepoint[[2]]) - 0.3, xend = as.numeric(p103_lineplot_data$Timepoint[[5]]), y = 6, size = 3.5, linejoin = \"mitre\",\n           alpha = 1,fill = \"darkgoldenrod1\", col = 'darkgoldenrod1',\n            arrow = arrow(type = \"closed\", length = unit(0.01, \"npc\"))) +\n  annotate(\"text\", x = as.numeric(p103_lineplot_data$Timepoint[[2]]) - 0.7, y = 6, label = \"Nivolumab\", size = 3) +\n  annotate(\"segment\", x = as.numeric(p103_lineplot_data$Timepoint[[3]]) - 0.3, xend = as.numeric(p103_lineplot_data$Timepoint[[3]]) + 0.4, y = 8, size = 3.5, linejoin = \"mitre\",\n           alpha = 1,fill = \"deepskyblue\", col = 'deepskyblue',\n            arrow = arrow(type = \"closed\", length = unit(0.00, \"npc\"))) +\n  annotate(\"text\", x = as.numeric(p103_lineplot_data$Timepoint[[3]]) - 0.6, y = 8.5, label = \"Vaccine\", size = 3)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\nWarning in annotate(\"segment\", x =\nas.numeric(p103_lineplot_data$Timepoint[[2]]) - : Ignoring unknown parameters:\n`fill`\n\n\nWarning in annotate(\"segment\", x =\nas.numeric(p103_lineplot_data$Timepoint[[3]]) - : Ignoring unknown parameters:\n`fill`",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>bulkTCRseq: Plot the frequency of all clones</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_Clone_Frequency_3B_S5A.html#save-the-other-patients-lineplots-as-fig-s5a",
    "href": "PBMC_bulkTCR_Plot_Clone_Frequency_3B_S5A.html#save-the-other-patients-lineplots-as-fig-s5a",
    "title": "1  bulkTCRseq: Plot the frequency of all clones",
    "section": "1.7 Save the other patients’ lineplots as Fig S5A",
    "text": "1.7 Save the other patients’ lineplots as Fig S5A\n\np101_lp  +\n  annotate(\"segment\", x = as.numeric(p101_lineplot_data$Timepoint[[2]]) - 0.3, xend = as.numeric(p101_lineplot_data$Timepoint[[3]]), y = 6, size = 3.5, linejoin = \"mitre\",\n           alpha = 1,fill = \"darkgoldenrod1\", col = 'darkgoldenrod1',\n            arrow = arrow(type = \"closed\", length = unit(0.01, \"npc\"))) +\n  annotate(\"text\", x = as.numeric(p101_lineplot_data$Timepoint[[2]]) - 0.6, y = 6, label = \"Nivolumab\", size = 3) +\n  annotate(\"segment\", x = as.numeric(p101_lineplot_data$Timepoint[[3]]) - 0.3, xend = as.numeric(p101_lineplot_data$Timepoint[[3]]), y = 8, size = 3.5, linejoin = \"mitre\",\n           alpha = 1,fill = \"deepskyblue\", col = 'deepskyblue',\n            arrow = arrow(type = \"closed\", length = unit(0.01, \"npc\"))) +\n  annotate(\"text\", x = as.numeric(p101_lineplot_data$Timepoint[[3]]) - 0.55, y = 8.5, label = \"Vaccine\", size = 3)\n\nWarning in annotate(\"segment\", x =\nas.numeric(p101_lineplot_data$Timepoint[[2]]) - : Ignoring unknown parameters:\n`fill`\n\n\nWarning in annotate(\"segment\", x =\nas.numeric(p101_lineplot_data$Timepoint[[3]]) - : Ignoring unknown parameters:\n`fill`\n\n\n\n\n\n\n\n\np104_lp  +\n  annotate(\"segment\", x = as.numeric(p104_lineplot_data$Timepoint[[2]]) - 0.3, xend = as.numeric(p104_lineplot_data$Timepoint[[3]]) + 0.84, y = 3, size = 3.5, linejoin = \"mitre\",\n           alpha = 1,fill = \"darkgoldenrod1\", col = 'darkgoldenrod1',\n            arrow = arrow(type = \"closed\", length = unit(0.00, \"npc\"))) +\n  annotate(\"text\", x = as.numeric(p104_lineplot_data$Timepoint[[2]]) - 0.7, y = 3, label = \"Nivolumab\", size = 3) +\n  annotate(\"segment\", x = as.numeric(p104_lineplot_data$Timepoint[[3]]) - 0.3, xend = as.numeric(p104_lineplot_data$Timepoint[[3]]) + 0.46, y = 4, size = 3.5, linejoin = \"mitre\",\n           alpha = 1,fill = \"deepskyblue\", col = 'deepskyblue',\n            arrow = arrow(type = \"closed\", length = unit(0, \"npc\"))) +\n  annotate(\"text\", x = as.numeric(p104_lineplot_data$Timepoint[[3]]) - 0.6, y = 4, label = \"Vaccine\", size = 3)\n\nWarning in annotate(\"segment\", x =\nas.numeric(p104_lineplot_data$Timepoint[[2]]) - : Ignoring unknown parameters:\n`fill`\n\n\nWarning in annotate(\"segment\", x =\nas.numeric(p104_lineplot_data$Timepoint[[3]]) - : Ignoring unknown parameters:\n`fill`\n\n\n\n\n\n\n\n\np105_lp +\n  annotate(\"segment\", x = as.numeric(p105_lineplot_data$Timepoint[[2]]) - 0.3, xend = as.numeric(p105_lineplot_data$Timepoint[[3]]) + 0.85, y = 3, size = 3.5, linejoin = \"mitre\",\n           alpha = 1,fill = \"darkgoldenrod1\", col = 'darkgoldenrod1',\n            arrow = arrow(type = \"closed\", length = unit(0.00, \"npc\"))) +\n  annotate(\"text\", x = as.numeric(p105_lineplot_data$Timepoint[[2]]) - 0.7, y = 3, label = \"Nivolumab\", size = 3) +\n  annotate(\"segment\", x = as.numeric(p105_lineplot_data$Timepoint[[3]]) - 0.3, xend = as.numeric(p105_lineplot_data$Timepoint[[3]]) + 0.35, y = 4, size = 3.5, linejoin = \"mitre\",\n           alpha = 1,fill = \"deepskyblue\", col = 'deepskyblue',\n            arrow = arrow(type = \"closed\", length = unit(0, \"npc\"))) +\n  annotate(\"text\", x = as.numeric(p105_lineplot_data$Timepoint[[3]]) - 0.6, y = 4, label = \"Vaccine\", size = 3)\n\nWarning in annotate(\"segment\", x =\nas.numeric(p105_lineplot_data$Timepoint[[2]]) - : Ignoring unknown parameters:\n`fill`\n\n\nWarning in annotate(\"segment\", x =\nas.numeric(p105_lineplot_data$Timepoint[[3]]) - : Ignoring unknown parameters:\n`fill`\n\n\n\n\n\n\n\n\np106_lp +\n  annotate(\"segment\", x = as.numeric(p106_lineplot_data$Timepoint[[2]]) - 0.3, xend = as.numeric(p106_lineplot_data$Timepoint[[3]]) + 0.87, y = 3, size = 3.5, linejoin = \"mitre\",\n           alpha = 1,fill = \"darkgoldenrod1\", col = 'darkgoldenrod1',\n            arrow = arrow(type = \"closed\", length = unit(0.00, \"npc\"))) +\n  annotate(\"text\", x = as.numeric(p106_lineplot_data$Timepoint[[2]]) - 0.7, y = 3, label = \"Nivolumab\", size = 3) +\n  annotate(\"segment\", x = as.numeric(p106_lineplot_data$Timepoint[[3]]) - 0.3, xend = as.numeric(p106_lineplot_data$Timepoint[[3]]) + 0.32, y = 4, size = 3.5, linejoin = \"mitre\",\n           alpha = 1,fill = \"deepskyblue\", col = 'deepskyblue',\n            arrow = arrow(type = \"closed\", length = unit(0, \"npc\"))) +\n  annotate(\"text\", x = as.numeric(p106_lineplot_data$Timepoint[[3]]) - 0.6, y = 4, label = \"Vaccine\", size = 3)\n\nWarning in annotate(\"segment\", x =\nas.numeric(p106_lineplot_data$Timepoint[[2]]) - : Ignoring unknown parameters:\n`fill`\n\n\nWarning in annotate(\"segment\", x =\nas.numeric(p106_lineplot_data$Timepoint[[3]]) - : Ignoring unknown parameters:\n`fill`\n\n\n\n\n\n\n\n\np108_lp +\n  annotate(\"segment\", x = as.numeric(p108_lineplot_data$Timepoint[[2]]) - 0.3, xend = as.numeric(p108_lineplot_data$Timepoint[[3]]) + 0.72, y = 3, size = 3.5, linejoin = \"mitre\",\n           alpha = 1,fill = \"darkgoldenrod1\", col = 'darkgoldenrod1',\n            arrow = arrow(type = \"closed\", length = unit(0.00, \"npc\"))) +\n  annotate(\"text\", x = as.numeric(p108_lineplot_data$Timepoint[[2]]) - 0.7, y = 3, label = \"Nivolumab\", size = 3) +\n  annotate(\"segment\", x = as.numeric(p108_lineplot_data$Timepoint[[3]]) - 0.3, xend = as.numeric(p108_lineplot_data$Timepoint[[3]]) + 0.63, y = 4, size = 3.5, linejoin = \"mitre\",\n           alpha = 1,fill = \"deepskyblue\", col = 'deepskyblue',\n            arrow = arrow(type = \"closed\", length = unit(0, \"npc\"))) +\n  annotate(\"text\", x = as.numeric(p108_lineplot_data$Timepoint[[3]]) - 0.6, y = 4, label = \"Vaccine\", size = 3)\n\nWarning in annotate(\"segment\", x =\nas.numeric(p108_lineplot_data$Timepoint[[2]]) - : Ignoring unknown parameters:\n`fill`\n\n\nWarning in annotate(\"segment\", x =\nas.numeric(p108_lineplot_data$Timepoint[[3]]) - : Ignoring unknown parameters:\n`fill`\n\n\n\n\n\n\n\n\np109_lp +\n  annotate(\"segment\", x = as.numeric(p109_lineplot_data$Timepoint[[2]]) - 0.3, xend = as.numeric(p109_lineplot_data$Timepoint[[3]]) + 0.86, y = 3, size = 3.5, linejoin = \"mitre\",\n           alpha = 1,fill = \"darkgoldenrod1\", col = 'darkgoldenrod1',\n            arrow = arrow(type = \"closed\", length = unit(0.00, \"npc\"))) +\n  annotate(\"text\", x = as.numeric(p109_lineplot_data$Timepoint[[2]]) - 0.7, y = 3, label = \"Nivolumab\", size = 3) +\n  annotate(\"segment\", x = as.numeric(p109_lineplot_data$Timepoint[[3]]) - 0.3, xend = as.numeric(p109_lineplot_data$Timepoint[[3]]) + 0.57, y = 4, size = 3.5, linejoin = \"mitre\",\n           alpha = 1,fill = \"deepskyblue\", col = 'deepskyblue',\n            arrow = arrow(type = \"closed\", length = unit(0, \"npc\"))) +\n  annotate(\"text\", x = as.numeric(p109_lineplot_data$Timepoint[[3]]) - 0.6, y = 4, label = \"Vaccine\", size = 3)\n\nWarning in annotate(\"segment\", x =\nas.numeric(p109_lineplot_data$Timepoint[[2]]) - : Ignoring unknown parameters:\n`fill`\n\n\nWarning in annotate(\"segment\", x =\nas.numeric(p109_lineplot_data$Timepoint[[3]]) - : Ignoring unknown parameters:\n`fill`\n\n\n\n\n\n\n\n\np110_lp +\n  annotate(\"segment\", x = as.numeric(p110_lineplot_data$Timepoint[[2]]) - 0.3, xend = as.numeric(p110_lineplot_data$Timepoint[[4]]), y = 6, size = 3.5, linejoin = \"mitre\",\n           alpha = 1,fill = \"darkgoldenrod1\", col = 'darkgoldenrod1',\n            arrow = arrow(type = \"closed\", length = unit(0.01, \"npc\"))) +\n  annotate(\"text\", x = as.numeric(p110_lineplot_data$Timepoint[[2]]) - 0.7, y = 6, label = \"Nivolumab\", size = 3) +\n  annotate(\"segment\", x = as.numeric(p110_lineplot_data$Timepoint[[3]]) - 0.3, xend = as.numeric(p110_lineplot_data$Timepoint[[3]]) + 0.55, y = 8, size = 3.5, linejoin = \"mitre\",\n           alpha = 1,fill = \"deepskyblue\", col = 'deepskyblue',\n            arrow = arrow(type = \"closed\", length = unit(0, \"npc\"))) +\n  annotate(\"text\", x = as.numeric(p110_lineplot_data$Timepoint[[3]]) - 0.6, y = 8.5, label = \"Vaccine\", size = 3)\n\nWarning in annotate(\"segment\", x =\nas.numeric(p110_lineplot_data$Timepoint[[2]]) - : Ignoring unknown parameters:\n`fill`\n\n\nWarning in annotate(\"segment\", x =\nas.numeric(p110_lineplot_data$Timepoint[[3]]) - : Ignoring unknown parameters:\n`fill`\n\n\n\n\n\n\n\n\np111_lp +\n  annotate(\"segment\", x = as.numeric(p111_lineplot_data$Timepoint[[2]]) - 0.3, xend = as.numeric(p111_lineplot_data$Timepoint[[3]]) + 0.68, y = 2, size = 3.5, linejoin = \"mitre\",\n           alpha = 1,fill = \"darkgoldenrod1\", col = 'darkgoldenrod1',\n            arrow = arrow(type = \"closed\", length = unit(0, \"npc\"))) +\n  annotate(\"text\", x = as.numeric(p111_lineplot_data$Timepoint[[2]]) - 0.7, y = 2, label = \"Nivolumab\", size = 3) +\n  annotate(\"segment\", x = as.numeric(p111_lineplot_data$Timepoint[[3]]) - 0.3, xend = as.numeric(p111_lineplot_data$Timepoint[[3]]) + 0.5, y = 2.5, size = 3.5, linejoin = \"mitre\",\n           alpha = 1,fill = \"deepskyblue\", col = 'deepskyblue',\n            arrow = arrow(type = \"closed\", length = unit(0, \"npc\"))) +\n  annotate(\"text\", x = as.numeric(p111_lineplot_data$Timepoint[[3]]) - 0.6, y = 2.5, label = \"Vaccine\", size = 3)\n\nWarning in annotate(\"segment\", x =\nas.numeric(p111_lineplot_data$Timepoint[[2]]) - : Ignoring unknown parameters:\n`fill`\n\n\nWarning in annotate(\"segment\", x =\nas.numeric(p111_lineplot_data$Timepoint[[3]]) - : Ignoring unknown parameters:\n`fill`",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>bulkTCRseq: Plot the frequency of all clones</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_Clone_Frequency_3B_S5A.html#get-session-info",
    "href": "PBMC_bulkTCR_Plot_Clone_Frequency_3B_S5A.html#get-session-info",
    "title": "1  bulkTCRseq: Plot the frequency of all clones",
    "section": "1.8 Get session info",
    "text": "1.8 Get session info\n\nsessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Rocky Linux 8.10 (Green Obsidian)\n\nMatrix products: default\nBLAS/LAPACK: /usr/lib64/libopenblasp-r0.3.15.so;  LAPACK version 3.9.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: America/New_York\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] scRepertoire_2.0.0 Seurat_5.1.0       SeuratObject_5.0.2 sp_2.2-0          \n [5] lubridate_1.9.4    forcats_1.0.0      stringr_1.5.1      dplyr_1.1.4       \n [9] purrr_1.0.4        readr_2.1.5        tidyr_1.3.1        tibble_3.2.1      \n[13] ggplot2_3.5.1      tidyverse_2.0.0   \n\nloaded via a namespace (and not attached):\n  [1] cubature_2.1.1              RcppAnnoy_0.0.22           \n  [3] splines_4.3.2               later_1.4.1                \n  [5] bitops_1.0-9                polyclip_1.10-7            \n  [7] fastDummies_1.7.5           lifecycle_1.0.4            \n  [9] globals_0.16.3              lattice_0.22-7             \n [11] MASS_7.3-60.0.1             magrittr_2.0.3             \n [13] plotly_4.10.4               rmarkdown_2.29             \n [15] httpuv_1.6.15               sctransform_0.4.1          \n [17] spam_2.11-1                 spatstat.sparse_3.1-0      \n [19] reticulate_1.42.0           cowplot_1.1.3              \n [21] pbapply_1.7-2               RColorBrewer_1.1-3         \n [23] abind_1.4-8                 zlibbioc_1.48.2            \n [25] Rtsne_0.17                  GenomicRanges_1.54.1       \n [27] ggraph_2.2.1                BiocGenerics_0.48.1        \n [29] RCurl_1.98-1.17             tweenr_2.0.3               \n [31] evmix_2.12                  GenomeInfoDbData_1.2.11    \n [33] IRanges_2.36.0              S4Vectors_0.40.2           \n [35] ggrepel_0.9.5               irlba_2.3.5.1              \n [37] listenv_0.9.1               spatstat.utils_3.1-0       \n [39] iNEXT_3.0.1                 MatrixModels_0.5-3         \n [41] goftest_1.2-3               RSpectra_0.16-2            \n [43] spatstat.random_3.3-1       fitdistrplus_1.2-2         \n [45] parallelly_1.41.0           leiden_0.4.3.1             \n [47] codetools_0.2-20            DelayedArray_0.28.0        \n [49] ggforce_0.4.2               tidyselect_1.2.1           \n [51] farver_2.1.2                viridis_0.6.5              \n [53] matrixStats_1.5.0           stats4_4.3.2               \n [55] spatstat.explore_3.3-2      jsonlite_1.8.9             \n [57] tidygraph_1.3.1             progressr_0.15.1           \n [59] ggridges_0.5.6              ggalluvial_0.12.5          \n [61] survival_3.8-3              tools_4.3.2                \n [63] stringdist_0.9.12           ica_1.0-3                  \n [65] Rcpp_1.0.14                 glue_1.8.0                 \n [67] gridExtra_2.3               SparseArray_1.2.4          \n [69] xfun_0.50                   MatrixGenerics_1.14.0      \n [71] GenomeInfoDb_1.38.8         withr_3.0.2                \n [73] fastmap_1.2.0               SparseM_1.84-2             \n [75] digest_0.6.37               timechange_0.3.0           \n [77] R6_2.6.1                    mime_0.13                  \n [79] colorspace_2.1-1            scattermore_1.2            \n [81] tensor_1.5                  spatstat.data_3.1-2        \n [83] generics_0.1.3              data.table_1.15.4          \n [85] graphlayouts_1.1.1          httr_1.4.7                 \n [87] htmlwidgets_1.6.4           S4Arrays_1.2.1             \n [89] uwot_0.2.3                  pkgconfig_2.0.3            \n [91] gtable_0.3.6                lmtest_0.9-40              \n [93] SingleCellExperiment_1.24.0 XVector_0.42.0             \n [95] htmltools_0.5.8.1           dotCall64_1.2              \n [97] scales_1.3.0                Biobase_2.62.0             \n [99] png_0.1-8                   spatstat.univar_3.0-0      \n[101] ggdendro_0.2.0              knitr_1.49                 \n[103] rstudioapi_0.17.1           rjson_0.2.23               \n[105] tzdb_0.5.0                  reshape2_1.4.4             \n[107] nlme_3.1-168                zoo_1.8-13                 \n[109] cachem_1.1.0                KernSmooth_2.23-26         \n[111] parallel_4.3.2              miniUI_0.1.1.1             \n[113] pillar_1.10.1               grid_4.3.2                 \n[115] vctrs_0.6.5                 RANN_2.6.2                 \n[117] VGAM_1.1-13                 promises_1.3.2             \n[119] xtable_1.8-4                cluster_2.1.8.1            \n[121] evaluate_1.0.1              truncdist_1.0-2            \n[123] cli_3.6.3                   compiler_4.3.2             \n[125] rlang_1.1.5                 crayon_1.5.3               \n[127] future.apply_1.11.3         plyr_1.8.9                 \n[129] stringi_1.8.4               viridisLite_0.4.2          \n[131] deldir_2.0-4                munsell_0.5.1              \n[133] gsl_2.1-8                   lazyeval_0.2.2             \n[135] spatstat.geom_3.3-2         quantreg_6.1               \n[137] Matrix_1.6-5                RcppHNSW_0.6.0             \n[139] hms_1.1.3                   patchwork_1.3.0            \n[141] future_1.34.0               shiny_1.9.1                \n[143] SummarizedExperiment_1.32.0 evd_2.3-7.1                \n[145] ROCR_1.0-11                 igraph_2.0.3               \n[147] memoise_2.0.1",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>bulkTCRseq: Plot the frequency of all clones</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_Clonotype_Counts_Bar_3C.html",
    "href": "PBMC_bulkTCR_Plot_Clonotype_Counts_Bar_3C.html",
    "title": "2  bulkTCRseq: Plot clonotype counts at the post-vaccine timepoint",
    "section": "",
    "text": "2.1 Set up workspace\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ readr     2.1.5\n✔ ggplot2   3.5.1     ✔ stringr   1.5.1\n✔ lubridate 1.9.4     ✔ tibble    3.2.1\n✔ purrr     1.0.4     ✔ tidyr     1.3.1\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggplot2)\nlibrary(patchwork)\n\n# Function to assign each clone from a dataframe with specific counts\nassign_counts_grp &lt;- function(betas_typed_df){\n  betas_typed_df &lt;- betas_typed_df %&gt;%\n    dplyr::rename(\"umi\" = 7) %&gt;%\n    mutate(PostVax_counts = case_when(umi == 1 ~ \"1\",\n                                     umi &gt; 1 & umi &lt;= 3 ~ \"2-3\",\n                                     umi &gt; 3 & umi &lt;= 10 ~ \"4-10\",\n                                     umi &gt; 10 & umi &lt;= 30  ~ \"11-30\",\n                                     umi &gt; 30 & umi &lt;= 100 ~ \"31-100\",\n                                     umi &gt; 100 ~ \"100-MAX\")) %&gt;%\n    select(Beta_clonotype, Patient, Type, PostVax_counts)\n  return(betas_typed_df)\n}",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>bulkTCRseq: Plot clonotype counts at the post-vaccine timepoint</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_Clonotype_Counts_Bar_3C.html#load-data",
    "href": "PBMC_bulkTCR_Plot_Clonotype_Counts_Bar_3C.html#load-data",
    "title": "2  bulkTCRseq: Plot clonotype counts at the post-vaccine timepoint",
    "section": "2.2 Load data",
    "text": "2.2 Load data\n\np101_betas_typed &lt;- read.csv(\"p101_betas_merged_typed_Part3.csv\")\np103_betas_typed &lt;- read.csv(\"p103_betas_merged_typed_Part3.csv\")\np104_betas_typed &lt;- read.csv(\"p104_betas_merged_typed_Part3.csv\")\np105_betas_typed &lt;- read.csv(\"p105_betas_merged_typed_Part3.csv\")\np106_betas_typed &lt;- read.csv(\"p106_betas_merged_typed_Part3.csv\")\np108_betas_typed &lt;- read.csv(\"p108_betas_merged_typed_Part3.csv\")\np109_betas_typed &lt;- read.csv(\"p109_betas_merged_typed_Part3.csv\")\np110_betas_typed &lt;- read.csv(\"p110_betas_merged_typed_Part3.csv\")\np111_betas_typed &lt;- read.csv(\"p111_betas_merged_typed_Part3.csv\")",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>bulkTCRseq: Plot clonotype counts at the post-vaccine timepoint</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_Clonotype_Counts_Bar_3C.html#calculate-and-plot-clonotype-counts-at-the-post-vaccine-timepoint",
    "href": "PBMC_bulkTCR_Plot_Clonotype_Counts_Bar_3C.html#calculate-and-plot-clonotype-counts-at-the-post-vaccine-timepoint",
    "title": "2  bulkTCRseq: Plot clonotype counts at the post-vaccine timepoint",
    "section": "2.3 Calculate and plot clonotype counts at the post-vaccine timepoint",
    "text": "2.3 Calculate and plot clonotype counts at the post-vaccine timepoint\n\nassigned_p101_postvax &lt;- assign_counts_grp(p101_betas_typed)\nassigned_p103_postvax &lt;- assign_counts_grp(p103_betas_typed)\nassigned_p104_postvax &lt;- assign_counts_grp(p104_betas_typed)\nassigned_p105_postvax &lt;- assign_counts_grp(p105_betas_typed)\nassigned_p106_postvax &lt;- assign_counts_grp(p106_betas_typed)\nassigned_p108_postvax &lt;- assign_counts_grp(p108_betas_typed)\nassigned_p109_postvax &lt;- assign_counts_grp(p109_betas_typed)\nassigned_p110_postvax &lt;- assign_counts_grp(p110_betas_typed)\nassigned_p111_postvax &lt;- assign_counts_grp(p111_betas_typed)\n\nfull &lt;- rbind(assigned_p101_postvax, assigned_p103_postvax,\n              assigned_p104_postvax, assigned_p105_postvax, assigned_p106_postvax, assigned_p108_postvax, assigned_p109_postvax, assigned_p110_postvax, assigned_p111_postvax)  %&gt;%\n  mutate(Type = factor(Type, levels = c(\"Other\", \"Existing\", \"Post-Nivolumab\", \"Post-Vaccine\")),\n         PostVax_counts = factor(PostVax_counts, levels = c(\"1\", \"2-3\", \"4-10\", \"11-30\", \"31-100\", \"100-MAX\")),\n         Type_PostVax_counts = paste0(Type, \":\", PostVax_counts),\n         Type_PostVax_counts = factor(Type_PostVax_counts, \n                                      levels = c(\"Existing:1\", \"Existing:2-3\", \"Existing:4-10\", \"Existing:11-30\", \"Existing:31-100\", \"Existing:100-MAX\",\n                                                 \"Post-Nivolumab:1\", \"Post-Nivolumab:2-3\", \"Post-Nivolumab:4-10\", \"Post-Nivolumab:11-30\", \"Post-Nivolumab:31-100\", \"Post-Nivolumab:100-MAX\",\n                                                 \"Post-Vaccine:1\", \"Post-Vaccine:2-3\", \"Post-Vaccine:4-10\", \"Post-Vaccine:11-30\", \"Post-Vaccine:31-100\", \"Post-Vaccine:100-MAX\")))\n\nprop_bc &lt;- full %&gt;%\n  group_by(Patient, Type, Type_PostVax_counts) %&gt;%\n  dplyr::count() %&gt;%\n  filter(Type != \"Other\") %&gt;%\n  ggplot(aes(x = Patient, y = n, fill = Type_PostVax_counts)) +\n  geom_col(position = \"fill\") +\n  scale_fill_manual(name = \"Clonotype counts at the\\npost-vaccine timepoint\", values = c(colorRampPalette(c(\"grey95\", \"grey70\"))(6), colorRampPalette(c(\"#f9df9e\", \"darkgoldenrod3\"))(6), colorRampPalette(c(\"#C0E8FF\", \"#0072B2\"))(5))) +\n  ylab(\"Proportion of Clones\") +\n  theme_classic() +\n  theme(plot.title = element_text(hjust=0.5))\n\nprop_bc",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>bulkTCRseq: Plot clonotype counts at the post-vaccine timepoint</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_Clonotype_Counts_Bar_3C.html#get-session-info",
    "href": "PBMC_bulkTCR_Plot_Clonotype_Counts_Bar_3C.html#get-session-info",
    "title": "2  bulkTCRseq: Plot clonotype counts at the post-vaccine timepoint",
    "section": "2.4 Get session info",
    "text": "2.4 Get session info\n\nsessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Rocky Linux 8.10 (Green Obsidian)\n\nMatrix products: default\nBLAS/LAPACK: /usr/lib64/libopenblasp-r0.3.15.so;  LAPACK version 3.9.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: America/New_York\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] patchwork_1.3.0 lubridate_1.9.4 forcats_1.0.0   stringr_1.5.1  \n [5] purrr_1.0.4     readr_2.1.5     tidyr_1.3.1     tibble_3.2.1   \n [9] ggplot2_3.5.1   tidyverse_2.0.0 dplyr_1.1.4    \n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.6      jsonlite_1.8.9    compiler_4.3.2    tidyselect_1.2.1 \n [5] scales_1.3.0      fastmap_1.2.0     R6_2.6.1          labeling_0.4.3   \n [9] generics_0.1.3    knitr_1.49        htmlwidgets_1.6.4 munsell_0.5.1    \n[13] pillar_1.10.1     tzdb_0.5.0        rlang_1.1.5       stringi_1.8.4    \n[17] xfun_0.50         timechange_0.3.0  cli_3.6.3         withr_3.0.2      \n[21] magrittr_2.0.3    digest_0.6.37     grid_4.3.2        rstudioapi_0.17.1\n[25] hms_1.1.3         lifecycle_1.0.4   vctrs_0.6.5       evaluate_1.0.1   \n[29] glue_1.8.0        farver_2.1.2      colorspace_2.1-1  rmarkdown_2.29   \n[33] tools_4.3.2       pkgconfig_2.0.3   htmltools_0.5.8.1",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>bulkTCRseq: Plot clonotype counts at the post-vaccine timepoint</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_SE_clones_3C_3H.html",
    "href": "PBMC_bulkTCR_Plot_SE_clones_3C_3H.html",
    "title": "3  bulkTCRseq: Percentage of significantly expanding clones across patients",
    "section": "",
    "text": "3.1 Set up workspace\n# Libraries\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(dplyr)",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>bulkTCRseq: Percentage of significantly expanding clones across patients</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_SE_clones_3C_3H.html#open-clones-that-significantly-expanded-after-vaccination",
    "href": "PBMC_bulkTCR_Plot_SE_clones_3C_3H.html#open-clones-that-significantly-expanded-after-vaccination",
    "title": "3  bulkTCRseq: Percentage of significantly expanding clones across patients",
    "section": "3.2 Open clones that significantly expanded after vaccination",
    "text": "3.2 Open clones that significantly expanded after vaccination\n\nfile_list &lt;- list.files(\".\")\nfile_list &lt;- file_list[str_detect(file_list, \"pval_postvax_vs_prevax_Part4.csv\")]\npt_name &lt;- str_split_i(file_list, \"_\", 1)\n\n# Read in csvs\nSE_vax.list &lt;- lapply(file_list, read.csv)\n# Rename\nnames(SE_vax.list) &lt;- pt_name\n\n# Reformat data\nfor(i in c(1:length(SE_vax.list))){\n  # Filter for significant clones\n  SE_vax.list[[i]] &lt;- SE_vax.list[[i]] %&gt;% \n    filter(sig == \"Sig\") %&gt;%\n  # Add a column for Patient\n    mutate(Patient = toupper(names(SE_vax.list[i]))) %&gt;%\n  # Select important columns\n    select(Beta_clonotype, sig, Patient) %&gt;%\n    # Rename sig\n    dplyr::rename(\"SE_vax\" = \"sig\")\n}",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>bulkTCRseq: Percentage of significantly expanding clones across patients</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_SE_clones_3C_3H.html#open-clones-that-significantly-expanded-after-nivolumab",
    "href": "PBMC_bulkTCR_Plot_SE_clones_3C_3H.html#open-clones-that-significantly-expanded-after-nivolumab",
    "title": "3  bulkTCRseq: Percentage of significantly expanding clones across patients",
    "section": "3.3 Open clones that significantly expanded after nivolumab",
    "text": "3.3 Open clones that significantly expanded after nivolumab\n\nfile_list &lt;- list.files(\".\")\nfile_list &lt;- file_list[str_detect(file_list, \"pval_prevax_vs_pretreatment_Part4.csv\")]\npt_name &lt;- str_split_i(file_list, \"_\", 1)\n\n# Read in csvs\nSE_nivo.list &lt;- lapply(file_list, read.csv)\n# Rename\nnames(SE_nivo.list) &lt;- pt_name\n\n# Reformat data\nfor(i in c(1:length(SE_nivo.list))){\n  # Filter for significant clones\n  SE_nivo.list[[i]] &lt;- SE_nivo.list[[i]] %&gt;% \n    filter(sig == \"Sig\") %&gt;%\n  # Add a column for Patient\n    mutate(Patient = toupper(names(SE_nivo.list[i]))) %&gt;%\n  # Select important columns\n    select(Beta_clonotype, sig, Patient) %&gt;%\n    # Rename sig\n    dplyr::rename(\"SE_nivo\" = \"sig\")\n}",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>bulkTCRseq: Percentage of significantly expanding clones across patients</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_SE_clones_3C_3H.html#open-existing-de-novo-post-nivo-and-post-vax-clones",
    "href": "PBMC_bulkTCR_Plot_SE_clones_3C_3H.html#open-existing-de-novo-post-nivo-and-post-vax-clones",
    "title": "3  bulkTCRseq: Percentage of significantly expanding clones across patients",
    "section": "3.4 Open Existing, de novo Post-Nivo and Post-Vax clones",
    "text": "3.4 Open Existing, de novo Post-Nivo and Post-Vax clones\n\nfile_list &lt;- list.files(\".\")\nfile_list &lt;- file_list[str_detect(file_list, \"merged_typed_full_Part3.csv\")]\npt_name &lt;- str_split_i(file_list, \"_\", 1)\n\n# Read in csvs\ntyped_clones.list &lt;- lapply(file_list, read.csv)\n# Rename list\nnames(typed_clones.list) &lt;- pt_name\n\n# Reformat data\nfor(i in c(1:length(typed_clones.list))){\n  # Filter for non-Other clones\n  typed_clones.list[[i]] &lt;- typed_clones.list[[i]] %&gt;% \n    filter(Type != \"Other\") %&gt;%\n    # Select important columns \n    select(Beta_clonotype, Type, Patient, max_log2fc_pool_vs_dmso, ends_with(\"prevax\"), ends_with(\"postvax\"))\n  colnames(typed_clones.list[[i]])[5] &lt;- \"prevax\"\n  colnames(typed_clones.list[[i]])[7] &lt;- \"postvax\"\n}",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>bulkTCRseq: Percentage of significantly expanding clones across patients</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_SE_clones_3C_3H.html#open-imp-expanded-clones",
    "href": "PBMC_bulkTCR_Plot_SE_clones_3C_3H.html#open-imp-expanded-clones",
    "title": "3  bulkTCRseq: Percentage of significantly expanding clones across patients",
    "section": "3.5 Open IMP-expanded clones",
    "text": "3.5 Open IMP-expanded clones\n\nfile_list &lt;- list.files(\".\")\nfile_list &lt;- file_list[str_detect(file_list, \"betas_merged_typed_imp_expanded_Part3.csv\")]\npt_name &lt;- str_split_i(file_list, \"_\", 1)\n\n# Read in csvs\nimp_clones.list &lt;- lapply(file_list, read.csv)\n# Rename list\nnames(imp_clones.list) &lt;- pt_name\n\n# Reformat data\nfor(i in c(1:length(imp_clones.list))){\n  imp_clones.list[[i]] &lt;- imp_clones.list[[i]] %&gt;% \n    # Select important columns \n    select(Beta_clonotype, Type, Patient, expanded_local_min)\n}",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>bulkTCRseq: Percentage of significantly expanding clones across patients</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_SE_clones_3C_3H.html#merge-lists-into-a-large-dataframe",
    "href": "PBMC_bulkTCR_Plot_SE_clones_3C_3H.html#merge-lists-into-a-large-dataframe",
    "title": "3  bulkTCRseq: Percentage of significantly expanding clones across patients",
    "section": "3.6 Merge lists into a large dataframe",
    "text": "3.6 Merge lists into a large dataframe\n\nSE_vax.df &lt;- do.call(rbind, SE_vax.list)\nSE_nivo.df &lt;- do.call(rbind, SE_nivo.list)\ntyped_clones.df &lt;- do.call(rbind, typed_clones.list)\nimp_clones.df &lt;- do.call(rbind, imp_clones.list)\n\nclones.df &lt;- SE_vax.df %&gt;%\n  full_join(SE_nivo.df) %&gt;%\n  full_join(typed_clones.df) %&gt;%\n  full_join(imp_clones.df) %&gt;%\n  mutate(SE_nivo = case_when(SE_nivo == \"Sig\" ~ \"SE_nivo\",\n                                      is.na(SE_nivo) ~ \"Non_SE_nivo\"),\n         SE_vax = case_when(SE_vax == \"Sig\" ~ \"SE_vax\",\n                                      is.na(SE_vax) ~ \"Non_SE_vax\"),\n         Type = case_when(is.na(Type) ~ \"Other\",\n                          T ~ Type),\n         IMP_expanded = case_when(expanded_local_min == TRUE ~ \"IMP-expanded\",\n                                        is.na(expanded_local_min) & Type == \"Other\" ~ \"NA\",\n                                        T ~ \"Non_IMP-expanded\"),\n         SE = case_when(SE_vax == \"Non_SE_vax\" & SE_nivo == \"Non_SE_nivo\" ~ \"Non SE\",\n                        SE_vax == \"Non_SE_vax\" & SE_nivo == \"SE_nivo\" ~ \"SE nivo\",\n                        SE_vax == \"SE_vax\" & SE_nivo == \"Non_SE_nivo\" ~ \"SE vax\",\n                        SE_vax == \"SE_vax\" & SE_nivo == \"SE_nivo\" ~ \"SE nivo + vax\"),\n         SE_general = case_when(SE == \"Non SE\" ~ \"Non SE\",\n                                T ~ \"SE\")) %&gt;%\n  select(-expanded_local_min, -max_log2fc_pool_vs_dmso)\n\nJoining with `by = join_by(Beta_clonotype, Patient)`\nJoining with `by = join_by(Beta_clonotype, Patient)`\nJoining with `by = join_by(Beta_clonotype, Patient, Type)`",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>bulkTCRseq: Percentage of significantly expanding clones across patients</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_SE_clones_3C_3H.html#plot-the-number-of-existing-post-nivolumab-and-post-vaccine-clones-that-are-also-significantly-expanding-after-nivolumab-or-vaccination-for-fig-3c-top",
    "href": "PBMC_bulkTCR_Plot_SE_clones_3C_3H.html#plot-the-number-of-existing-post-nivolumab-and-post-vaccine-clones-that-are-also-significantly-expanding-after-nivolumab-or-vaccination-for-fig-3c-top",
    "title": "3  bulkTCRseq: Percentage of significantly expanding clones across patients",
    "section": "3.7 Plot the number of existing, post-nivolumab and post-vaccine clones that are also significantly expanding after nivolumab or vaccination for Fig 3C top",
    "text": "3.7 Plot the number of existing, post-nivolumab and post-vaccine clones that are also significantly expanding after nivolumab or vaccination for Fig 3C top\n\nclones_sum &lt;- clones.df %&gt;%\n  filter(Type %in% c(\"Existing\", \"Post-Nivolumab\", \"Post-Vaccine\")) %&gt;%\n  mutate(Type = factor(Type)) %&gt;%\n  group_by(SE, SE_general, Patient, Type) %&gt;%\n  dplyr::count()\n\nplot &lt;- clones_sum %&gt;%\n  ggplot(aes(y = n, x = Type, fill = SE_general)) +\n  geom_col(position = \"fill\", size = 0.2, width = 0.7, color = \"black\") +\n  theme_classic() +\n  facet_wrap(~Patient, ncol = 9) +\n  scale_fill_manual(values = c(\"white\", \"black\"),\n                    name = \"Category\") +\n  theme(axis.text.x = element_blank(),\n        axis.ticks.x = element_blank(),\n        strip.background = element_blank(),\n        strip.text = element_blank(),\n        axis.title.x = element_blank()) +\n  ylab(\"Proportion of clones\") +\n  annotate(\"rect\", col = \"grey70\", fill = \"grey70\", size = 1,\n        xmin = as.numeric(unique(clones_sum$Type)[[1]]) - 0.3,\n        xmax = as.numeric(unique(clones_sum$Type)[[1]]) + 0.3,\n        ymin = -0.05, ymax = -0.15) +\n  annotate(\"rect\", col = \"darkgoldenrod3\", fill = \"darkgoldenrod3\", size = 1,\n        xmin = as.numeric(unique(clones_sum$Type)[[2]]) - 0.3,\n        xmax = as.numeric(unique(clones_sum$Type)[[2]]) + 0.3,\n        ymin = -0.05, ymax = -0.15) +\n  annotate(\"rect\", col = \"#0072B2\", fill = \"#0072B2\", size = 1,\n        xmin = as.numeric(unique(clones_sum$Type)[[3]]) - 0.3,\n        xmax = as.numeric(unique(clones_sum$Type)[[3]]) + 0.3,\n        ymin = -0.05, ymax = -0.15) +\n  scale_y_continuous(expand = c(0, 0.06))\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\nplot",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>bulkTCRseq: Percentage of significantly expanding clones across patients</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_SE_clones_3C_3H.html#plot-the-number-of-imp-expanded-clones-are-also-significantly-expanding-after-vaccination-for-fig-3h-left",
    "href": "PBMC_bulkTCR_Plot_SE_clones_3C_3H.html#plot-the-number-of-imp-expanded-clones-are-also-significantly-expanding-after-vaccination-for-fig-3h-left",
    "title": "3  bulkTCRseq: Percentage of significantly expanding clones across patients",
    "section": "3.8 Plot the number of IMP expanded clones are also significantly expanding after vaccination for Fig 3H left",
    "text": "3.8 Plot the number of IMP expanded clones are also significantly expanding after vaccination for Fig 3H left\n\nimp_clones_sum &lt;- clones.df %&gt;%\n  filter(Type %in% c(\"Existing\", \"Post-Nivolumab\", \"Post-Vaccine\")) %&gt;%\n  group_by(SE_vax, Patient, IMP_expanded) %&gt;%\n  dplyr::count() \n\nfilt_imp_clones_sum &lt;- imp_clones_sum %&gt;%\n  filter(IMP_expanded == \"IMP-expanded\") %&gt;%\n  mutate(Patient = factor(Patient, levels = c(\"P101\", \"P104\", \"P109\", \"P108\", \"P105\", \"P111\", \"P106\", \"P110\", \"P103\")),\n         SE_vax = case_when(SE_vax == \"Non_SE_vax\" ~ \"Non SE after vaccine\",\n                            SE_vax == \"SE_vax\" ~ \"SE after vaccine\"))\n\nplot &lt;- filt_imp_clones_sum %&gt;%\n  ggplot(aes(y = Patient, x = n, fill = SE_vax)) +\n  geom_col(position = \"fill\") +\n  scale_fill_manual(values = c(\"white\", \"black\"), name = \"Category\") +\n  theme_classic() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),\n        axis.ticks.y = element_blank()) +\n  xlab(\"Proportion of\\nIMP expanded clones\\nthat are SE after vaccine\") +\n  coord_cartesian(xlim = c(0, 1)) +\n  annotate(\"rect\", col = \"#920000FF\", alpha = 0, size = 0.8,\n        xmin = -0.01, xmax = 1.01,\n        ymin = as.numeric(unique(filt_imp_clones_sum$Patient)[[1]]) - 0.44, \n        ymax = as.numeric(unique(filt_imp_clones_sum$Patient)[[1]]) + 0.44) +\n  annotate(\"rect\", col = \"#920000FF\", alpha = 0, size = 0.8,\n        xmin = -0.01, xmax = 1.01,\n        ymin = as.numeric(unique(filt_imp_clones_sum$Patient)[[2]]) - 0.44, \n        ymax = as.numeric(unique(filt_imp_clones_sum$Patient)[[2]]) + 0.44) +\n  annotate(\"rect\", col = \"#920000FF\", alpha = 0, size = 0.8,\n        xmin = -0.01, xmax = 1.01,\n        ymin = as.numeric(unique(filt_imp_clones_sum$Patient)[[3]]) - 0.44, \n        ymax = as.numeric(unique(filt_imp_clones_sum$Patient)[[3]]) + 0.44) +\n  annotate(\"rect\", col = \"#920000FF\", alpha = 0, size = 0.8,\n        xmin = -0.01, xmax = 1.01,\n        ymin = as.numeric(unique(filt_imp_clones_sum$Patient)[[4]]) - 0.44, \n        ymax = as.numeric(unique(filt_imp_clones_sum$Patient)[[4]]) + 0.44) +\n  annotate(\"rect\", col = \"#920000FF\", alpha = 0, size = 0.8,\n        xmin = -0.01, xmax = 1.01,\n        ymin = as.numeric(unique(filt_imp_clones_sum$Patient)[[5]]) - 0.44, \n        ymax = as.numeric(unique(filt_imp_clones_sum$Patient)[[5]]) + 0.44) +\n  annotate(\"rect\", col = \"#920000FF\", alpha = 0, size = 0.8,\n        xmin = -0.01, xmax = 1.01,\n        ymin = as.numeric(unique(filt_imp_clones_sum$Patient)[[6]]) - 0.44, \n        ymax = as.numeric(unique(filt_imp_clones_sum$Patient)[[6]]) + 0.44) +\n  annotate(\"rect\", col = \"#920000FF\", alpha = 0, size = 0.8,\n        xmin = -0.01, xmax = 1.01,\n        ymin = as.numeric(unique(filt_imp_clones_sum$Patient)[[7]]) - 0.44, \n        ymax = as.numeric(unique(filt_imp_clones_sum$Patient)[[7]]) + 0.44) +\n  annotate(\"rect\", col = \"#920000FF\", alpha = 0, size = 0.8,\n        xmin = -0.01, xmax = 1.01,\n        ymin = as.numeric(unique(filt_imp_clones_sum$Patient)[[8]]) - 0.44, \n        ymax = as.numeric(unique(filt_imp_clones_sum$Patient)[[8]]) + 0.44) +\n  annotate(\"rect\", col = \"#920000FF\", alpha = 0, size = 0.8,\n        xmin = -0.01, xmax = 1.01,\n        ymin = as.numeric(unique(filt_imp_clones_sum$Patient)[[9]]) - 0.44, \n        ymax = as.numeric(unique(filt_imp_clones_sum$Patient)[[9]]) + 0.44)\n\nplot",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>bulkTCRseq: Percentage of significantly expanding clones across patients</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_SE_clones_3C_3H.html#get-session-info",
    "href": "PBMC_bulkTCR_Plot_SE_clones_3C_3H.html#get-session-info",
    "title": "3  bulkTCRseq: Percentage of significantly expanding clones across patients",
    "section": "3.9 Get session info",
    "text": "3.9 Get session info\n\nsessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Rocky Linux 8.10 (Green Obsidian)\n\nMatrix products: default\nBLAS/LAPACK: /usr/lib64/libopenblasp-r0.3.15.so;  LAPACK version 3.9.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: America/New_York\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] lubridate_1.9.4 forcats_1.0.0   stringr_1.5.1   dplyr_1.1.4    \n [5] purrr_1.0.4     readr_2.1.5     tidyr_1.3.1     tibble_3.2.1   \n [9] ggplot2_3.5.1   tidyverse_2.0.0\n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.6      jsonlite_1.8.9    compiler_4.3.2    tidyselect_1.2.1 \n [5] scales_1.3.0      fastmap_1.2.0     R6_2.6.1          labeling_0.4.3   \n [9] generics_0.1.3    knitr_1.49        htmlwidgets_1.6.4 munsell_0.5.1    \n[13] pillar_1.10.1     tzdb_0.5.0        rlang_1.1.5       stringi_1.8.4    \n[17] xfun_0.50         timechange_0.3.0  cli_3.6.3         withr_3.0.2      \n[21] magrittr_2.0.3    digest_0.6.37     grid_4.3.2        rstudioapi_0.17.1\n[25] hms_1.1.3         lifecycle_1.0.4   vctrs_0.6.5       evaluate_1.0.1   \n[29] glue_1.8.0        farver_2.1.2      colorspace_2.1-1  rmarkdown_2.29   \n[33] tools_4.3.2       pkgconfig_2.0.3   htmltools_0.5.8.1",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>bulkTCRseq: Percentage of significantly expanding clones across patients</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_Clone_Ridge_3E.html",
    "href": "PBMC_bulkTCR_Plot_Clone_Ridge_3E.html",
    "title": "4  bulkTCRseq: IMP-expanded clones",
    "section": "",
    "text": "4.1 Set up workspace\n# Libraries\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ readr     2.1.5\n✔ ggplot2   3.5.1     ✔ stringr   1.5.1\n✔ lubridate 1.9.4     ✔ tibble    3.2.1\n✔ purrr     1.0.4     ✔ tidyr     1.3.1\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggpointdensity)\nlibrary(ggplot2)\nlibrary(patchwork)\nlibrary(ggridges)",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>bulkTCRseq: IMP-expanded clones</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_Clone_Ridge_3E.html#load-all-clones",
    "href": "PBMC_bulkTCR_Plot_Clone_Ridge_3E.html#load-all-clones",
    "title": "4  bulkTCRseq: IMP-expanded clones",
    "section": "4.2 Load all clones",
    "text": "4.2 Load all clones\n\np101_betas_typed &lt;- read.csv(\"p101_betas_merged_typed_Part3.csv\")\np103_betas_typed &lt;- read.csv(\"p103_betas_merged_typed_Part3.csv\")\np104_betas_typed &lt;- read.csv(\"p104_betas_merged_typed_Part3.csv\")\np105_betas_typed &lt;- read.csv(\"p105_betas_merged_typed_Part3.csv\")\np106_betas_typed &lt;- read.csv(\"p106_betas_merged_typed_Part3.csv\")\np108_betas_typed &lt;- read.csv(\"p108_betas_merged_typed_Part3.csv\")\np109_betas_typed &lt;- read.csv(\"p109_betas_merged_typed_Part3.csv\")\np110_betas_typed &lt;- read.csv(\"p110_betas_merged_typed_Part3.csv\")\np111_betas_typed &lt;- read.csv(\"p111_betas_merged_typed_Part3.csv\")",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>bulkTCRseq: IMP-expanded clones</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_Clone_Ridge_3E.html#load-cutoffs",
    "href": "PBMC_bulkTCR_Plot_Clone_Ridge_3E.html#load-cutoffs",
    "title": "4  bulkTCRseq: IMP-expanded clones",
    "section": "4.3 Load cutoffs",
    "text": "4.3 Load cutoffs\n\ncutoff_df &lt;- read.csv(\"IMP_expanded_cuotff_Part3.csv\")\n\np101_min_x &lt;- cutoff_df %&gt;%\n  filter(Patient == \"P101\") %&gt;%\n  pull(invitro_exp_cutoff)\np103_min_x &lt;- cutoff_df %&gt;%\n  filter(Patient == \"P103\") %&gt;%\n  pull(invitro_exp_cutoff)\np104_min_x &lt;- cutoff_df %&gt;%\n  filter(Patient == \"P104\") %&gt;%\n  pull(invitro_exp_cutoff)\np105_min_x &lt;- cutoff_df %&gt;%\n  filter(Patient == \"P105\") %&gt;%\n  pull(invitro_exp_cutoff)\np106_min_x &lt;- cutoff_df %&gt;%\n  filter(Patient == \"P106\") %&gt;%\n  pull(invitro_exp_cutoff)\np108_min_x &lt;- cutoff_df %&gt;%\n  filter(Patient == \"P108\") %&gt;%\n  pull(invitro_exp_cutoff)\np109_min_x &lt;- cutoff_df %&gt;%\n  filter(Patient == \"P109\") %&gt;%\n  pull(invitro_exp_cutoff)\np110_min_x &lt;- cutoff_df %&gt;%\n  filter(Patient == \"P110\") %&gt;%\n  pull(invitro_exp_cutoff)\np111_min_x &lt;- cutoff_df %&gt;%\n  filter(Patient == \"P111\") %&gt;%\n  pull(invitro_exp_cutoff)",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>bulkTCRseq: IMP-expanded clones</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_Clone_Ridge_3E.html#reorder-type-factor",
    "href": "PBMC_bulkTCR_Plot_Clone_Ridge_3E.html#reorder-type-factor",
    "title": "4  bulkTCRseq: IMP-expanded clones",
    "section": "4.4 Reorder Type factor",
    "text": "4.4 Reorder Type factor\n\np101_betas_typed &lt;- p101_betas_typed %&gt;%\n  mutate(Type = factor(Type, levels = c(\"Post-Vaccine\", \"Post-Nivolumab\", \"Existing\")))\np103_betas_typed &lt;- p103_betas_typed %&gt;%\n  mutate(Type = factor(Type, levels = c(\"Post-Vaccine\", \"Post-Nivolumab\", \"Existing\")))\np104_betas_typed &lt;- p104_betas_typed %&gt;%\n  mutate(Type = factor(Type, levels = c(\"Post-Vaccine\", \"Post-Nivolumab\", \"Existing\")))\np105_betas_typed &lt;- p105_betas_typed %&gt;%\n  mutate(Type = factor(Type, levels = c(\"Post-Vaccine\", \"Post-Nivolumab\", \"Existing\")))\np106_betas_typed &lt;- p106_betas_typed %&gt;%\n  mutate(Type = factor(Type, levels = c(\"Post-Vaccine\", \"Post-Nivolumab\", \"Existing\")))\np108_betas_typed &lt;- p108_betas_typed %&gt;%\n  mutate(Type = factor(Type, levels = c(\"Post-Vaccine\", \"Post-Nivolumab\", \"Existing\")))\np109_betas_typed &lt;- p109_betas_typed %&gt;%\n  mutate(Type = factor(Type, levels = c(\"Post-Vaccine\", \"Post-Nivolumab\", \"Existing\")))\np110_betas_typed &lt;- p110_betas_typed %&gt;%\n  mutate(Type = factor(Type, levels = c(\"Post-Vaccine\", \"Post-Nivolumab\", \"Existing\")))\np111_betas_typed &lt;- p111_betas_typed %&gt;%\n  mutate(Type = factor(Type, levels = c(\"Post-Vaccine\", \"Post-Nivolumab\", \"Existing\")))",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>bulkTCRseq: IMP-expanded clones</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_Clone_Ridge_3E.html#ridgeplot-of-in-vitro-expansion-values-with-rug",
    "href": "PBMC_bulkTCR_Plot_Clone_Ridge_3E.html#ridgeplot-of-in-vitro-expansion-values-with-rug",
    "title": "4  bulkTCRseq: IMP-expanded clones",
    "section": "4.5 Ridgeplot of in vitro expansion values with rug",
    "text": "4.5 Ridgeplot of in vitro expansion values with rug\n\n# Create a rug of clones' expansion values\np101_rp &lt;- p101_betas_typed %&gt;%\n  ggplot(aes(x = log2(max_fc_pool_vs_dmso), y = Type, fill = Type)) +\n  geom_density_ridges(aes(point_color = factor(after_stat(x) &gt; log2(p101_min_x)), point_alpha = factor(after_stat(x) &gt; log2(p101_min_x))), jittered_points = TRUE,\n    position = position_points_jitter(width = 0, height = 0, yoffset = -0.2), # Rug\n    point_shape = '|', point_size = 3, #point_alpha = 0.7, \n    alpha = 0.7,\n    bandwidth = 0.3, scale = 2) +\n  scale_fill_manual(values = c(\"#0072B2\", \"darkgoldenrod3\", \"grey70\")) +\n  scale_discrete_manual(aesthetics = \"point_color\", values = c('black', \"#920000FF\"), guide = \"none\") +\n  scale_discrete_manual(aesthetics = \"point_alpha\", values = c(0.1, 0.7), guide = \"none\") +\n  xlab(expression(atop(italic(\"In vitro\")~\"expansion\",~log[2](\"PoolA,B peptides / DMSO\")))) +\n  ylab(\"Number of clones\") +\n  ggtitle(\"P101\") +\n  theme_classic() +\n  theme(plot.title = element_text(hjust=0.5),\n        axis.text.x = element_text(vjust=0)) + \n  geom_vline(xintercept = log2(p101_min_x), color = \"black\", linetype=\"dashed\") +\n  coord_cartesian(clip = \"off\")\n\np103_rp &lt;- p103_betas_typed %&gt;%\n  ggplot(aes(x = log2(max_fc_pool_vs_dmso), y = Type, fill = Type)) +\n  geom_density_ridges(aes(point_color = factor(after_stat(x) &gt; log2(p103_min_x)), point_alpha = factor(after_stat(x) &gt; log2(p103_min_x))), jittered_points = TRUE,\n    position = position_points_jitter(width = 0, height = 0, yoffset = -0.2), # Rug\n    point_shape = '|', point_size = 3, #point_alpha = 0.7, \n    alpha = 0.7,\n    bandwidth = 0.3, scale = 2) +\n  scale_fill_manual(values = c(\"#0072B2\", \"darkgoldenrod3\", \"grey70\")) +\n  scale_discrete_manual(aesthetics = \"point_color\", values = c('black', \"#920000FF\"), guide = \"none\") +\n  scale_discrete_manual(aesthetics = \"point_alpha\", values = c(0.1, 0.7), guide = \"none\") +\n  xlab(expression(atop(italic(\"In vitro\")~\"expansion\",~log[2](\"PoolA,B peptides / DMSO\")))) +\n  ylab(\"Number of clones\") +\n  ggtitle(\"P103\") +\n  theme_classic() +\n  theme(plot.title = element_text(hjust=0.5),\n        axis.text.x = element_text(vjust=0)) + \n  geom_vline(xintercept = log2(p103_min_x), color = \"black\", linetype=\"dashed\") +\n  coord_cartesian(clip = \"off\")\n\np104_rp &lt;- p104_betas_typed %&gt;%\n  ggplot(aes(x = log2(max_fc_pool_vs_dmso), y = Type, fill = Type)) +\n  geom_density_ridges(aes(point_color = factor(after_stat(x) &gt; log2(p104_min_x)), point_alpha = factor(after_stat(x) &gt; log2(p104_min_x))), jittered_points = TRUE,\n    position = position_points_jitter(width = 0, height = 0, yoffset = -0.2), # Rug\n    point_shape = '|', point_size = 3, #point_alpha = 0.7, \n    alpha = 0.7,\n    bandwidth = 0.3, scale = 2) +\n  scale_fill_manual(values = c(\"#0072B2\", \"darkgoldenrod3\", \"grey70\")) +\n  scale_discrete_manual(aesthetics = \"point_color\", values = c('black', \"#920000FF\"), guide = \"none\") +\n  scale_discrete_manual(aesthetics = \"point_alpha\", values = c(0.1, 0.7), guide = \"none\") +\n  xlab(expression(atop(italic(\"In vitro\")~\"expansion\",~log[2](\"PoolA,B peptides / DMSO\")))) +\n  ylab(\"Number of clones\") +\n  ggtitle(\"P104\") +\n  theme_classic() +\n  theme(plot.title = element_text(hjust=0.5),\n        axis.text.x = element_text(vjust=0)) + \n  geom_vline(xintercept = log2(p104_min_x), color = \"black\", linetype=\"dashed\") +\n  coord_cartesian(clip = \"off\")\n\np105_rp &lt;- p105_betas_typed %&gt;%\n  ggplot(aes(x = log2(max_fc_pool_vs_dmso), y = Type, fill = Type)) +\n  geom_density_ridges(aes(point_color = factor(after_stat(x) &gt; log2(p105_min_x)), point_alpha = factor(after_stat(x) &gt; log2(p105_min_x))), jittered_points = TRUE,\n    position = position_points_jitter(width = 0, height = 0, yoffset = -0.2), # Rug\n    point_shape = '|', point_size = 3, #point_alpha = 0.7, \n    alpha = 0.7,\n    bandwidth = 0.3, scale = 2) +\n  scale_fill_manual(values = c(\"#0072B2\", \"darkgoldenrod3\", \"grey70\")) +\n  scale_discrete_manual(aesthetics = \"point_color\", values = c('black', \"#920000FF\"), guide = \"none\") +\n  scale_discrete_manual(aesthetics = \"point_alpha\", values = c(0.1, 0.7), guide = \"none\") +\n  xlab(expression(atop(italic(\"In vitro\")~\"expansion\",~log[2](\"PoolA,B peptides / DMSO\")))) +\n  ylab(\"Number of clones\") +\n  ggtitle(\"P105\") +\n  theme_classic() +\n  theme(plot.title = element_text(hjust=0.5),\n        axis.text.x = element_text(vjust=0)) + \n  geom_vline(xintercept = log2(p105_min_x), color = \"black\", linetype=\"dashed\") +\n  coord_cartesian(clip = \"off\")\n\np106_rp &lt;- p106_betas_typed %&gt;%\n  ggplot(aes(x = log2(max_fc_pool_vs_dmso), y = Type, fill = Type)) +\n  geom_density_ridges(aes(point_color = factor(after_stat(x) &gt; log2(p106_min_x)), point_alpha = factor(after_stat(x) &gt; log2(p106_min_x))), jittered_points = TRUE,\n    position = position_points_jitter(width = 0, height = 0, yoffset = -0.2), # Rug\n    point_shape = '|', point_size = 3, #point_alpha = 0.7, \n    alpha = 0.7,\n    bandwidth = 0.3, scale = 2) +\n  scale_fill_manual(values = c(\"#0072B2\", \"darkgoldenrod3\", \"grey70\")) +\n  scale_discrete_manual(aesthetics = \"point_color\", values = c('black', \"#920000FF\"), guide = \"none\") +\n  scale_discrete_manual(aesthetics = \"point_alpha\", values = c(0.1, 0.7), guide = \"none\") +\n  xlab(expression(atop(italic(\"In vitro\")~\"expansion\",~log[2](\"PoolA,B peptides / DMSO\")))) +\n  ylab(\"Number of clones\") +\n  ggtitle(\"P106\") +\n  theme_classic() +\n  theme(plot.title = element_text(hjust=0.5),\n        axis.text.x = element_text(vjust=0)) + \n  geom_vline(xintercept = log2(p106_min_x), color = \"black\", linetype=\"dashed\") +\n  coord_cartesian(clip = \"off\")\n\np108_rp &lt;- p108_betas_typed %&gt;%\n  ggplot(aes(x = log2(max_fc_pool_vs_dmso), y = Type, fill = Type)) +\n  geom_density_ridges(aes(point_color = factor(after_stat(x) &gt; log2(p108_min_x)), point_alpha = factor(after_stat(x) &gt; log2(p108_min_x))), jittered_points = TRUE,\n    position = position_points_jitter(width = 0, height = 0, yoffset = -0.2), # Rug\n    point_shape = '|', point_size = 3, #point_alpha = 0.7, \n    alpha = 0.7,\n    bandwidth = 0.3, scale = 2) +\n  scale_fill_manual(values = c(\"#0072B2\", \"darkgoldenrod3\", \"grey70\")) +\n  scale_discrete_manual(aesthetics = \"point_color\", values = c('black', \"#920000FF\"), guide = \"none\") +\n  scale_discrete_manual(aesthetics = \"point_alpha\", values = c(0.1, 0.7), guide = \"none\") +\n  xlab(expression(atop(italic(\"In vitro\")~\"expansion\",~log[2](\"PoolA,B peptides / DMSO\")))) +\n  ylab(\"Number of clones\") +\n  ggtitle(\"P108\") +\n  theme_classic() +\n  theme(plot.title = element_text(hjust=0.5),\n        axis.text.x = element_text(vjust=0)) + \n  geom_vline(xintercept = log2(p108_min_x), color = \"black\", linetype=\"dashed\") +\n  coord_cartesian(clip = \"off\")\n\np109_rp &lt;- p109_betas_typed %&gt;%\n  ggplot(aes(x = log2(max_fc_pool_vs_dmso), y = Type, fill = Type)) +\n  geom_density_ridges(aes(point_color = factor(after_stat(x) &gt; log2(p109_min_x)), point_alpha = factor(after_stat(x) &gt; log2(p109_min_x))), jittered_points = TRUE,\n    position = position_points_jitter(width = 0, height = 0, yoffset = -0.2), # Rug\n    point_shape = '|', point_size = 3, #point_alpha = 0.7, \n    alpha = 0.7,\n    bandwidth = 0.3, scale = 2) +\n  scale_fill_manual(values = c(\"#0072B2\", \"darkgoldenrod3\", \"grey70\")) +\n  scale_discrete_manual(aesthetics = \"point_color\", values = c('black', \"#920000FF\"), guide = \"none\") +\n  scale_discrete_manual(aesthetics = \"point_alpha\", values = c(0.1, 0.7), guide = \"none\") +\n  xlab(expression(atop(italic(\"In vitro\")~\"expansion\",~log[2](\"PoolA,B peptides / DMSO\")))) +\n  ylab(\"Number of clones\") +\n  ggtitle(\"P109\") +\n  theme_classic() +\n  theme(plot.title = element_text(hjust=0.5),\n        axis.text.x = element_text(vjust=0)) + \n  geom_vline(xintercept = log2(p109_min_x), color = \"black\", linetype=\"dashed\") +\n  coord_cartesian(clip = \"off\")\n\np110_rp &lt;- p110_betas_typed %&gt;%\n  ggplot(aes(x = log2(max_fc_pool_vs_dmso), y = Type, fill = Type)) +\n  geom_density_ridges(aes(point_color = factor(after_stat(x) &gt; log2(p110_min_x)), point_alpha = factor(after_stat(x) &gt; log2(p110_min_x))), jittered_points = TRUE,\n    position = position_points_jitter(width = 0, height = 0, yoffset = -0.2), # Rug\n    point_shape = '|', point_size = 3, #point_alpha = 0.7, \n    alpha = 0.7,\n    bandwidth = 0.3, scale = 2) +\n  scale_fill_manual(values = c(\"#0072B2\", \"darkgoldenrod3\", \"grey70\")) +\n  scale_discrete_manual(aesthetics = \"point_color\", values = c('black', \"#920000FF\"), guide = \"none\") +\n  scale_discrete_manual(aesthetics = \"point_alpha\", values = c(0.1, 0.7), guide = \"none\") +\n  xlab(expression(atop(italic(\"In vitro\")~\"expansion\",~log[2](\"PoolA,B peptides / DMSO\")))) +\n  ylab(\"Number of clones\") +\n  ggtitle(\"P110\") +\n  theme_classic() +\n  theme(plot.title = element_text(hjust=0.5),\n        axis.text.x = element_text(vjust=0)) + \n  geom_vline(xintercept = log2(p110_min_x), color = \"black\", linetype=\"dashed\") +\n  coord_cartesian(clip = \"off\")\n\np111_rp &lt;- p111_betas_typed %&gt;%\n  ggplot(aes(x = log2(max_fc_pool_vs_dmso), y = Type, fill = Type)) +\n  geom_density_ridges(aes(point_color = factor(after_stat(x) &gt; log2(p111_min_x)), point_alpha = factor(after_stat(x) &gt; log2(p111_min_x))), jittered_points = TRUE,\n    position = position_points_jitter(width = 0, height = 0, yoffset = -0.2), # Rug\n    point_shape = '|', point_size = 3, #point_alpha = 0.7, \n    alpha = 0.7,\n    bandwidth = 0.3, scale = 2.5) +\n  scale_fill_manual(values = c(\"#0072B2\", \"darkgoldenrod3\", \"grey70\")) +\n  scale_discrete_manual(aesthetics = \"point_color\", values = c('black', \"#920000FF\"), guide = \"none\") +\n  scale_discrete_manual(aesthetics = \"point_alpha\", values = c(0.1, 0.7), guide = \"none\") +\n  xlab(expression(atop(italic(\"In vitro\")~\"expansion\",~log[2](\"PoolA,B peptides / DMSO\")))) +\n  ylab(\"Number of clones\") +\n  ggtitle(\"P111\") +\n  theme_classic() +\n  theme(plot.title = element_text(hjust=0.5),\n        axis.text.x = element_text(vjust=0)) + \n  geom_vline(xintercept = log2(p111_min_x), color = \"black\", linetype=\"dashed\") +\n  coord_cartesian(clip = \"off\")",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>bulkTCRseq: IMP-expanded clones</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_Clone_Ridge_3E.html#patchwork-together-for-fig-3e",
    "href": "PBMC_bulkTCR_Plot_Clone_Ridge_3E.html#patchwork-together-for-fig-3e",
    "title": "4  bulkTCRseq: IMP-expanded clones",
    "section": "4.6 Patchwork together for Fig 3E",
    "text": "4.6 Patchwork together for Fig 3E\n\nrp &lt;- p101_rp + p103_rp + p104_rp + p105_rp + p106_rp + p108_rp + p109_rp + p110_rp + p111_rp + plot_layout(guides = \"collect\", axis_titles = \"collect\")\n\nrp",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>bulkTCRseq: IMP-expanded clones</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_Clone_Ridge_3E.html#get-session-info",
    "href": "PBMC_bulkTCR_Plot_Clone_Ridge_3E.html#get-session-info",
    "title": "4  bulkTCRseq: IMP-expanded clones",
    "section": "4.7 Get session info",
    "text": "4.7 Get session info\n\nsessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Rocky Linux 8.10 (Green Obsidian)\n\nMatrix products: default\nBLAS/LAPACK: /usr/lib64/libopenblasp-r0.3.15.so;  LAPACK version 3.9.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: America/New_York\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] ggridges_0.5.6       patchwork_1.3.0      ggpointdensity_0.1.0\n [4] lubridate_1.9.4      forcats_1.0.0        stringr_1.5.1       \n [7] purrr_1.0.4          readr_2.1.5          tidyr_1.3.1         \n[10] tibble_3.2.1         ggplot2_3.5.1        tidyverse_2.0.0     \n[13] dplyr_1.1.4         \n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.6      jsonlite_1.8.9    compiler_4.3.2    tidyselect_1.2.1 \n [5] scales_1.3.0      fastmap_1.2.0     R6_2.6.1          labeling_0.4.3   \n [9] generics_0.1.3    knitr_1.49        htmlwidgets_1.6.4 munsell_0.5.1    \n[13] pillar_1.10.1     tzdb_0.5.0        rlang_1.1.5       stringi_1.8.4    \n[17] xfun_0.50         timechange_0.3.0  cli_3.6.3         withr_3.0.2      \n[21] magrittr_2.0.3    digest_0.6.37     grid_4.3.2        rstudioapi_0.17.1\n[25] hms_1.1.3         lifecycle_1.0.4   vctrs_0.6.5       evaluate_1.0.1   \n[29] glue_1.8.0        farver_2.1.2      colorspace_2.1-1  rmarkdown_2.29   \n[33] tools_4.3.2       pkgconfig_2.0.3   htmltools_0.5.8.1",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>bulkTCRseq: IMP-expanded clones</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_IMP_Expanded_Frequency_3F_S5B.html",
    "href": "PBMC_bulkTCR_Plot_IMP_Expanded_Frequency_3F_S5B.html",
    "title": "5  bulkTCRseq: Frequency plot of IMP expanded clones",
    "section": "",
    "text": "5.1 Set up workspace\n# Libraries\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(dplyr)\nlibrary(patchwork)",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>bulkTCRseq: Frequency plot of IMP expanded clones</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_IMP_Expanded_Frequency_3F_S5B.html#load-imp-expanded-clones",
    "href": "PBMC_bulkTCR_Plot_IMP_Expanded_Frequency_3F_S5B.html#load-imp-expanded-clones",
    "title": "5  bulkTCRseq: Frequency plot of IMP expanded clones",
    "section": "5.2 Load IMP expanded clones",
    "text": "5.2 Load IMP expanded clones\n\np101_betas_expanded &lt;- read.csv(\"p101_betas_merged_typed_imp_expanded_Part3.csv\")\np103_betas_expanded &lt;- read.csv(\"p103_betas_merged_typed_imp_expanded_Part3.csv\")\np104_betas_expanded &lt;- read.csv(\"p104_betas_merged_typed_imp_expanded_Part3.csv\")\np105_betas_expanded &lt;- read.csv(\"p105_betas_merged_typed_imp_expanded_Part3.csv\")\np106_betas_expanded &lt;- read.csv(\"p106_betas_merged_typed_imp_expanded_Part3.csv\")\np108_betas_expanded &lt;- read.csv(\"p108_betas_merged_typed_imp_expanded_Part3.csv\")\np109_betas_expanded &lt;- read.csv(\"p109_betas_merged_typed_imp_expanded_Part3.csv\")\np110_betas_expanded &lt;- read.csv(\"p110_betas_merged_typed_imp_expanded_Part3.csv\")\np111_betas_expanded &lt;- read.csv(\"p111_betas_merged_typed_imp_expanded_Part3.csv\")\np110_betas_expanded &lt;- read.csv(\"p110_betas_merged_typed_imp_expanded_Part3.csv\")\np111_betas_expanded &lt;- read.csv(\"p111_betas_merged_typed_imp_expanded_Part3.csv\")",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>bulkTCRseq: Frequency plot of IMP expanded clones</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_IMP_Expanded_Frequency_3F_S5B.html#massage-data-for-frequency-lineplot",
    "href": "PBMC_bulkTCR_Plot_IMP_Expanded_Frequency_3F_S5B.html#massage-data-for-frequency-lineplot",
    "title": "5  bulkTCRseq: Frequency plot of IMP expanded clones",
    "section": "5.3 Massage data for frequency lineplot",
    "text": "5.3 Massage data for frequency lineplot\n\np101_lineplot_data &lt;- p101_betas_expanded %&gt;%\n  select(c(Beta_clonotype, p101_pretreatment, p101_prevax, p101_postvax, expanded_local_min, Type)) %&gt;%\n  dplyr::rename(\"Pre-treatment\" = \"p101_pretreatment\", \"Pre-vax\" = \"p101_prevax\", \"Post-vax\" = \"p101_postvax\") %&gt;% \n  pivot_longer(!c(Beta_clonotype, expanded_local_min, Type), names_to = \"Timepoint\", values_to = \"Frequency\") %&gt;%\n  mutate(Frequency = replace_na(Frequency, 0),\n         Timepoint = factor(Timepoint, levels = c(\"Pre-treatment\", \"Pre-vax\", \"Post-vax\")),\n         Type = factor(Type, levels = c(\"Existing\", \"Post-Nivolumab\", \"Post-Vaccine\")),\n         Beta_clonotype = forcats::fct_reorder(as.factor(Beta_clonotype), rank(Type)))\n\np103_lineplot_data &lt;- p103_betas_expanded %&gt;%\n  select(c(Beta_clonotype, p103_pretreatment, p103_prevax, p103_postvax, p103_w48, p103_w72, expanded_local_min, Type)) %&gt;%\n  dplyr::rename(\"Pre-treatment\" = \"p103_pretreatment\", \"Pre-vax\" = \"p103_prevax\", \"Post-vax\" = \"p103_postvax\", \"W48\" = \"p103_w48\", \"W72\" = \"p103_w72\") %&gt;% \n  pivot_longer(!c(Beta_clonotype, expanded_local_min, Type), names_to = \"Timepoint\", values_to = \"Frequency\") %&gt;%\n  mutate(Frequency = replace_na(Frequency, 0),\n         Timepoint = factor(Timepoint, levels = c(\"Pre-treatment\", \"Pre-vax\", \"Post-vax\", \"W48\", \"W72\")),\n         Type = factor(Type, levels = c(\"Existing\", \"Post-Nivolumab\", \"Post-Vaccine\")),\n         Beta_clonotype = forcats::fct_reorder(as.factor(Beta_clonotype), rank(Type)))\n\np104_lineplot_data &lt;- p104_betas_expanded %&gt;%\n  select(c(Beta_clonotype, p104_pretreatment, p104_prevax, p104_postvax, p104_w48,  expanded_local_min, Type)) %&gt;%\n  dplyr::rename(\"Pre-treatment\" = \"p104_pretreatment\", \"Pre-vax\" = \"p104_prevax\", \"Post-vax\" = \"p104_postvax\", \"W48\" = \"p104_w48\") %&gt;% \n  pivot_longer(!c(Beta_clonotype, expanded_local_min, Type), names_to = \"Timepoint\", values_to = \"Frequency\") %&gt;%\n  mutate(Frequency = replace_na(Frequency, 0),\n         Timepoint = factor(Timepoint, levels = c(\"Pre-treatment\", \"Pre-vax\", \"Post-vax\", \"W48\")),\n         Type = factor(Type, levels = c(\"Existing\", \"Post-Nivolumab\", \"Post-Vaccine\")),\n         Beta_clonotype = forcats::fct_reorder(as.factor(Beta_clonotype), rank(Type)))\n\np105_lineplot_data &lt;- p105_betas_expanded %&gt;%\n  select(c(Beta_clonotype, p105_pretreatment, p105_prevax, p105_postvax, p105_w48, expanded_local_min, Type)) %&gt;%\n  dplyr::rename(\"Pre-treatment\" = \"p105_pretreatment\", \"Pre-vax\" = \"p105_prevax\", \"Post-vax\" = \"p105_postvax\", \"W48\" = \"p105_w48\") %&gt;% \n  pivot_longer(!c(Beta_clonotype, expanded_local_min, Type), names_to = \"Timepoint\", values_to = \"Frequency\") %&gt;%\n  mutate(Frequency = replace_na(Frequency, 0),\n         Timepoint = factor(Timepoint, levels = c(\"Pre-treatment\", \"Pre-vax\", \"Post-vax\", \"W48\")),\n         Type = factor(Type, levels = c(\"Existing\", \"Post-Nivolumab\", \"Post-Vaccine\")),\n         Beta_clonotype = forcats::fct_reorder(as.factor(Beta_clonotype), rank(Type)))\n\np106_lineplot_data &lt;- p106_betas_expanded %&gt;%\n  select(c(Beta_clonotype, p106_pretreatment, p106_prevax, p106_postvax, p106_w48, expanded_local_min, Type)) %&gt;%\n  dplyr::rename(\"Pre-treatment\" = \"p106_pretreatment\", \"Pre-vax\" = \"p106_prevax\", \"Post-vax\" = \"p106_postvax\", \"W48\" = \"p106_w48\") %&gt;% \n  pivot_longer(!c(Beta_clonotype, expanded_local_min, Type), names_to = \"Timepoint\", values_to = \"Frequency\") %&gt;%\n  mutate(Frequency = replace_na(Frequency, 0),\n         Timepoint = factor(Timepoint, levels = c(\"Pre-treatment\", \"Pre-vax\", \"Post-vax\", \"W48\")),\n         Type = factor(Type, levels = c(\"Existing\", \"Post-Nivolumab\", \"Post-Vaccine\")),\n         Beta_clonotype = forcats::fct_reorder(as.factor(Beta_clonotype), rank(Type)))\n\np108_lineplot_data &lt;- p108_betas_expanded %&gt;%\n  select(c(Beta_clonotype, p108_pretreatment, p108_prevax, p108_postvax, p108_w32, expanded_local_min, Type)) %&gt;%\n  dplyr::rename(\"Pre-treatment\" = \"p108_pretreatment\", \"Pre-vax\" = \"p108_prevax\", \"Post-vax\" = \"p108_postvax\", \"W32\" = \"p108_w32\") %&gt;% \n  pivot_longer(!c(Beta_clonotype, expanded_local_min, Type), names_to = \"Timepoint\", values_to = \"Frequency\") %&gt;%\n  mutate(Frequency = replace_na(Frequency, 0),\n         Timepoint = factor(Timepoint, levels = c(\"Pre-treatment\", \"Pre-vax\", \"Post-vax\", \"W32\")),\n         Type = factor(Type, levels = c(\"Existing\", \"Post-Nivolumab\", \"Post-Vaccine\")),\n         Beta_clonotype = forcats::fct_reorder(as.factor(Beta_clonotype), rank(Type)))\n\np109_lineplot_data &lt;- p109_betas_expanded %&gt;%\n  select(c(Beta_clonotype, p109_pretreatment, p109_prevax, p109_postvax, p109_w48, expanded_local_min, Type)) %&gt;%\n  dplyr::rename(\"Pre-treatment\" = \"p109_pretreatment\", \"Pre-vax\" = \"p109_prevax\", \"Post-vax\" = \"p109_postvax\", \"W48\" = \"p109_w48\") %&gt;% \n  pivot_longer(!c(Beta_clonotype, expanded_local_min, Type), names_to = \"Timepoint\", values_to = \"Frequency\") %&gt;%\n  mutate(Frequency = replace_na(Frequency, 0),\n         Timepoint = factor(Timepoint, levels = c(\"Pre-treatment\", \"Pre-vax\", \"Post-vax\", \"W48\")),\n         Type = factor(Type, levels = c(\"Existing\", \"Post-Nivolumab\", \"Post-Vaccine\")),\n         Beta_clonotype = forcats::fct_reorder(as.factor(Beta_clonotype), rank(Type)))\n\np110_lineplot_data &lt;- p110_betas_expanded %&gt;%\n  select(c(Beta_clonotype, p110_pretreatment, p110_prevax, p110_postvax, p110_w38, expanded_local_min, Type)) %&gt;%\n  dplyr::rename(\"Pre-treatment\" = \"p110_pretreatment\", \"Pre-vax\" = \"p110_prevax\", \"Post-vax\" = \"p110_postvax\", \"W38\" = \"p110_w38\") %&gt;% \n  pivot_longer(!c(Beta_clonotype, expanded_local_min, Type), names_to = \"Timepoint\", values_to = \"Frequency\") %&gt;%\n  mutate(Frequency = replace_na(Frequency, 0),\n         Timepoint = factor(Timepoint, levels = c(\"Pre-treatment\", \"Pre-vax\", \"Post-vax\", \"W38\")),\n         Type = factor(Type, levels = c(\"Existing\", \"Post-Nivolumab\", \"Post-Vaccine\")),\n         Beta_clonotype = forcats::fct_reorder(as.factor(Beta_clonotype), rank(Type)))\n\np111_lineplot_data &lt;- p111_betas_expanded %&gt;%\n  select(c(Beta_clonotype, p111_pretreatment, p111_prevax, p111_postvax, p111_w40, expanded_local_min, Type)) %&gt;%\n  dplyr::rename(\"Pre-treatment\" = \"p111_pretreatment\", \"Pre-vax\" = \"p111_prevax\", \"Post-vax\" = \"p111_postvax\", \"W40\" = \"p111_w40\") %&gt;% \n  pivot_longer(!c(Beta_clonotype, expanded_local_min, Type), names_to = \"Timepoint\", values_to = \"Frequency\") %&gt;%\n  mutate(Frequency = replace_na(Frequency, 0),\n         Timepoint = factor(Timepoint, levels = c(\"Pre-treatment\", \"Pre-vax\", \"Post-vax\", \"W40\")),\n         Type = factor(Type, levels = c(\"Existing\", \"Post-Nivolumab\", \"Post-Vaccine\")),\n         Beta_clonotype = forcats::fct_reorder(as.factor(Beta_clonotype), rank(Type)))",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>bulkTCRseq: Frequency plot of IMP expanded clones</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_IMP_Expanded_Frequency_3F_S5B.html#objects-for-the-lod-lines",
    "href": "PBMC_bulkTCR_Plot_IMP_Expanded_Frequency_3F_S5B.html#objects-for-the-lod-lines",
    "title": "5  bulkTCRseq: Frequency plot of IMP expanded clones",
    "section": "5.4 Objects for the LOD lines",
    "text": "5.4 Objects for the LOD lines\n\nindiv_lod_line &lt;- geom_hline(yintercept = 0.0001, linetype = \"dashed\", color = \"red\")\np101_lod_annot &lt;- annotate(\"text\", x = as.numeric(p101_lineplot_data$Timepoint[[3]]) + 0.25, y = 0.00015, label = \"LOD\", size = 4, color = \"red\")\np103_lod_annot &lt;- annotate(\"text\", x = as.numeric(p103_lineplot_data$Timepoint[[5]]) + 0.25, y = 0.00016, label = \"LOD\", size = 4, color = \"red\")\np104_lod_annot &lt;- annotate(\"text\", x = as.numeric(p104_lineplot_data$Timepoint[[4]]) + 0.25, y = 0.00013, label = \"LOD\", size = 4, color = \"red\")\np105_lod_annot &lt;- annotate(\"text\", x = as.numeric(p105_lineplot_data$Timepoint[[4]]) + 0.25, y = 0.00015, label = \"LOD\", size = 4, color = \"red\")\np106_lod_annot &lt;- annotate(\"text\", x = as.numeric(p106_lineplot_data$Timepoint[[4]]) + 0.25, y = 0.00016, label = \"LOD\", size = 4, color = \"red\")\np108_lod_annot &lt;- annotate(\"text\", x = as.numeric(p108_lineplot_data$Timepoint[[4]]) + 0.25, y = 0.00017, label = \"LOD\", size = 4, color = \"red\")\np109_lod_annot &lt;- annotate(\"text\", x = as.numeric(p109_lineplot_data$Timepoint[[4]]) + 0.25, y = 0.00016, label = \"LOD\", size = 4, color = \"red\")\np110_lod_annot &lt;- annotate(\"text\", x = as.numeric(p110_lineplot_data$Timepoint[[4]]) + 0.25, y = 0.00016, label = \"LOD\", size = 4, color = \"red\")\np111_lod_annot &lt;- annotate(\"text\", x = as.numeric(p111_lineplot_data$Timepoint[[4]]) + 0.25, y = 0.00016, label = \"LOD\", size = 4, color = \"red\")",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>bulkTCRseq: Frequency plot of IMP expanded clones</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_IMP_Expanded_Frequency_3F_S5B.html#plot-frequency-over-time",
    "href": "PBMC_bulkTCR_Plot_IMP_Expanded_Frequency_3F_S5B.html#plot-frequency-over-time",
    "title": "5  bulkTCRseq: Frequency plot of IMP expanded clones",
    "section": "5.5 Plot frequency over time",
    "text": "5.5 Plot frequency over time\nPlotting individual lines with high transparency and a thick line for mean frequency\n\n# Get mean\np101_mean &lt;- p101_lineplot_data %&gt;%\n  filter(expanded_local_min == TRUE) %&gt;%\n  select(-Beta_clonotype) %&gt;%\n  group_by(Type, Timepoint) %&gt;%\n  summarise(mean = mean(Frequency)) %&gt;%\n  mutate(Patient = \"P101\")\n\n`summarise()` has grouped output by 'Type'. You can override using the\n`.groups` argument.\n\n# Plot expanded local min invitro\np101_lineplot &lt;- p101_lineplot_data %&gt;%\n  filter(expanded_local_min == TRUE) %&gt;%\n  ggplot() +\n  geom_line(aes(x = Timepoint, y = Frequency, color = Type, group = Beta_clonotype), alpha = 0.2) +\n  geom_line(data = p101_mean, aes(x = Timepoint, y = mean, color = Type, group = Type), size = ifelse(p101_mean$Type==\"Post-Vaccine\", 2, 1)) +\n  scale_color_manual(values = c(\"grey70\", \"darkgoldenrod3\", \"#0072B2\")) +\n  scale_y_log10() +\n  annotation_logticks(sides = \"l\") +\n  ggtitle(\"P101\") +\n  theme_classic() +\n  theme(plot.title = element_text(hjust=0.5),\n        axis.text.x = element_text(size = 7)) +\n  indiv_lod_line +\n  p101_lod_annot\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n# Get mean\np103_mean &lt;- p103_lineplot_data %&gt;%\n  filter(expanded_local_min == TRUE) %&gt;%\n  select(-Beta_clonotype) %&gt;%\n  group_by(Type, Timepoint) %&gt;%\n  summarise(mean = mean(Frequency)) %&gt;%\n  mutate(Patient = \"P103\")\n\n`summarise()` has grouped output by 'Type'. You can override using the\n`.groups` argument.\n\n# Plot expanded local min invitro\np103_lineplot &lt;- p103_lineplot_data %&gt;%\n  filter(expanded_local_min == TRUE) %&gt;%\n  ggplot() +\n  geom_line(aes(x = Timepoint, y = Frequency, color = Type, group = Beta_clonotype), alpha = 0.2) +\n  geom_line(data = p103_mean, aes(x = Timepoint, y = mean, color = Type, group = Type), size = ifelse(p103_mean$Type==\"Post-Vaccine\", 2, 1)) +\n  scale_color_manual(values = c(\"grey70\", \"darkgoldenrod3\", \"#0072B2\")) +\n  scale_y_log10() +\n  annotation_logticks(sides = \"l\") +\n  ggtitle(\"P103\") +\n  theme_classic() +\n  theme(plot.title = element_text(hjust=0.5),\n        axis.text.x = element_text(size = 7)) +\n  indiv_lod_line +\n  p103_lod_annot\n  \n# Get mean\np104_mean &lt;- p104_lineplot_data %&gt;%\n  filter(expanded_local_min == TRUE) %&gt;%\n  select(-Beta_clonotype) %&gt;%\n  group_by(Type, Timepoint) %&gt;%\n  summarise(mean = mean(Frequency)) %&gt;%\n  mutate(Patient = \"P104\")\n\n`summarise()` has grouped output by 'Type'. You can override using the\n`.groups` argument.\n\n# Plot expanded local min invitro\np104_lineplot &lt;- p104_lineplot_data %&gt;%\n  filter(expanded_local_min == TRUE) %&gt;%\n  ggplot() +\n  geom_line(aes(x = Timepoint, y = Frequency, color = Type, group = Beta_clonotype), alpha = 0.2) +\n  geom_line(data = p104_mean, aes(x = Timepoint, y = mean, color = Type, group = Type), size = ifelse(p104_mean$Type==\"Post-Vaccine\", 2, 1)) +\n  scale_color_manual(values = c(\"grey70\", \"#0072B2\"), guide=\"none\") +\n  scale_y_log10() +\n  annotation_logticks(sides = \"l\") +\n  ggtitle(\"P104\") +\n  theme_classic() +\n  theme(plot.title = element_text(hjust=0.5),\n        axis.text.x = element_text(size = 7)) +\n  indiv_lod_line +\n  p104_lod_annot\n\n# Get mean\np105_mean &lt;- p105_lineplot_data %&gt;%\n  filter(expanded_local_min == TRUE) %&gt;%\n  select(-Beta_clonotype) %&gt;%\n  group_by(Type, Timepoint) %&gt;%\n  summarise(mean = mean(Frequency)) %&gt;%\n  mutate(Patient = \"P105\")\n\n`summarise()` has grouped output by 'Type'. You can override using the\n`.groups` argument.\n\n# Plot expanded local min invitro\np105_lineplot &lt;- p105_lineplot_data %&gt;%\n  filter(expanded_local_min == TRUE) %&gt;%\n  ggplot() +\n  geom_line(aes(x = Timepoint, y = Frequency, color = Type, group = Beta_clonotype), alpha = 0.2) +\n  geom_line(data = p105_mean, aes(x = Timepoint, y = mean, color = Type, group = Type), size = ifelse(p105_mean$Type==\"Post-Vaccine\", 2, 1)) +\n  scale_color_manual(values = c(\"grey70\", \"darkgoldenrod3\", \"#0072B2\"), guide=\"none\") +\n  scale_y_log10() +\n  annotation_logticks(sides = \"l\") +\n  ggtitle(\"P105\") +\n  theme_classic() +\n  theme(plot.title = element_text(hjust=0.5),\n        axis.text.x = element_text(size = 7)) +\n  indiv_lod_line +\n  p105_lod_annot\n\n# Get mean\np106_mean &lt;- p106_lineplot_data %&gt;%\n  filter(expanded_local_min == TRUE) %&gt;%\n  select(-Beta_clonotype) %&gt;%\n  group_by(Type, Timepoint) %&gt;%\n  summarise(mean = mean(Frequency)) %&gt;%\n  mutate(Patient = \"P106\")\n\n`summarise()` has grouped output by 'Type'. You can override using the\n`.groups` argument.\n\n# Plot expanded local min invitro\np106_lineplot &lt;- p106_lineplot_data %&gt;%\n  filter(expanded_local_min == TRUE) %&gt;%\n  ggplot() +\n  geom_line(aes(x = Timepoint, y = Frequency, color = Type, group = Beta_clonotype), alpha = 0.2) +\n  geom_line(data = p106_mean, aes(x = Timepoint, y = mean, color = Type, group = Type), size = ifelse(p106_mean$Type==\"Post-Vaccine\", 2, 1)) +\n  scale_color_manual(values = c(\"grey70\", \"darkgoldenrod3\", \"#0072B2\")) +\n  scale_y_log10() +\n  annotation_logticks(sides = \"l\") +\n  ggtitle(\"P106\") +\n  theme_classic() +\n  theme(plot.title = element_text(hjust=0.5),\n        axis.text.x = element_text(size = 7)) +\n  indiv_lod_line  +\n  p106_lod_annot\n\n# Get mean\np108_mean &lt;- p108_lineplot_data %&gt;%\n  filter(expanded_local_min == TRUE) %&gt;%\n  select(-Beta_clonotype) %&gt;%\n  group_by(Type, Timepoint) %&gt;%\n  summarise(mean = mean(Frequency)) %&gt;%\n  mutate(Patient = \"P108\")\n\n`summarise()` has grouped output by 'Type'. You can override using the\n`.groups` argument.\n\n# Plot expanded local min invitro\np108_lineplot &lt;- p108_lineplot_data %&gt;%\n  filter(expanded_local_min == TRUE) %&gt;%\n  ggplot() +\n  geom_line(aes(x = Timepoint, y = Frequency, color = Type, group = Beta_clonotype), alpha = 0.2) +\n  geom_line(data = p108_mean, aes(x = Timepoint, y = mean, color = Type, group = Type), size = ifelse(p108_mean$Type==\"Post-Vaccine\", 2, 1)) +\n  scale_color_manual(values = c(\"grey70\", \"darkgoldenrod3\", \"#0072B2\")) +\n  scale_y_log10() +\n  annotation_logticks(sides = \"l\") +\n  ggtitle(\"P108\") +\n  theme_classic() +\n  theme(plot.title = element_text(hjust=0.5),\n        axis.text.x = element_text(size = 7)) +\n  indiv_lod_line  +\n  p108_lod_annot\n\n# Get mean\np109_mean &lt;- p109_lineplot_data %&gt;%\n  filter(expanded_local_min == TRUE) %&gt;%\n  select(-Beta_clonotype) %&gt;%\n  group_by(Type, Timepoint) %&gt;%\n  summarise(mean = mean(Frequency)) %&gt;%\n  mutate(Patient = \"P109\")\n\n`summarise()` has grouped output by 'Type'. You can override using the\n`.groups` argument.\n\n# Plot expanded local min invitro\np109_lineplot &lt;- p109_lineplot_data %&gt;%\n  filter(expanded_local_min == TRUE) %&gt;%\n  ggplot() +\n  geom_line(aes(x = Timepoint, y = Frequency, color = Type, group = Beta_clonotype), alpha = 0.2) +\n  geom_line(data = p109_mean, aes(x = Timepoint, y = mean, color = Type, group = Type), size = ifelse(p109_mean$Type==\"Post-Vaccine\", 2, 1)) +\n  scale_color_manual(values = c(\"grey70\", \"darkgoldenrod3\", \"#0072B2\"), guide=\"none\") +\n  scale_y_log10() +\n  annotation_logticks(sides = \"l\") +\n  ggtitle(\"P109\") +\n  theme_classic() +\n  theme(plot.title = element_text(hjust=0.5),\n        axis.text.x = element_text(size = 7)) +\n  indiv_lod_line  +\n  p109_lod_annot\n\n# Get mean\np110_mean &lt;- p110_lineplot_data %&gt;%\n  filter(expanded_local_min == TRUE) %&gt;%\n  select(-Beta_clonotype) %&gt;%\n  group_by(Type, Timepoint) %&gt;%\n  summarise(mean = mean(Frequency)) %&gt;%\n  mutate(Patient = \"P110\")\n\n`summarise()` has grouped output by 'Type'. You can override using the\n`.groups` argument.\n\n# Plot expanded local min invitro\np110_lineplot &lt;- p110_lineplot_data %&gt;%\n  filter(expanded_local_min == TRUE) %&gt;%\n  ggplot() +\n  geom_line(aes(x = Timepoint, y = Frequency, color = Type, group = Beta_clonotype), alpha = 0.2) +\n  geom_line(data = p110_mean, aes(x = Timepoint, y = mean, color = Type, group = Type), size = ifelse(p110_mean$Type==\"Post-Vaccine\", 2, 1)) +\n  scale_color_manual(values = c(\"grey70\", \"darkgoldenrod3\", \"#0072B2\")) +\n  scale_y_log10() +\n  annotation_logticks(sides = \"l\") +\n  ggtitle(\"P110\") +\n  theme_classic() +\n  theme(plot.title = element_text(hjust=0.5),\n        axis.text.x = element_text(size = 7)) +\n  indiv_lod_line  +\n  p110_lod_annot\n\n# Get mean\np111_mean &lt;- p111_lineplot_data %&gt;%\n  filter(expanded_local_min == TRUE) %&gt;%\n  select(-Beta_clonotype) %&gt;%\n  group_by(Type, Timepoint) %&gt;%\n  summarise(mean = mean(Frequency)) %&gt;%\n  mutate(Patient = \"P111\")\n\n`summarise()` has grouped output by 'Type'. You can override using the\n`.groups` argument.\n\n# Plot expanded local min invitro\np111_lineplot &lt;- p111_lineplot_data %&gt;%\n  filter(expanded_local_min == TRUE) %&gt;%\n  ggplot() +\n  geom_line(aes(x = Timepoint, y = Frequency, color = Type, group = Beta_clonotype), alpha = 0.2) +\n  geom_line(data = p111_mean, aes(x = Timepoint, y = mean, color = Type, group = Type), size = ifelse(p111_mean$Type==\"Post-Vaccine\", 2, 1)) +\n  scale_color_manual(values = c(\"grey70\", \"darkgoldenrod3\", \"#0072B2\")) +\n  scale_y_log10() +\n  annotation_logticks(sides = \"l\") +\n  ggtitle(\"P111\") +\n  theme_classic() +\n  theme(plot.title = element_text(hjust=0.5),\n        axis.text.x = element_text(size = 7)) +\n  indiv_lod_line  +\n  p111_lod_annot\n\nall_pt_lp &lt;- p101_lineplot + p103_lineplot + p104_lineplot + p105_lineplot + p106_lineplot + p108_lineplot + p109_lineplot + p110_lineplot + p111_lineplot + plot_layout(guides = 'collect', axis_titles = \"collect\", ncol = 3)  + plot_annotation('Movement of IMP-Expanded Clones',  theme=theme(plot.title=element_text(hjust=0.5, size = 20)))\n\nall_pt_lp",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>bulkTCRseq: Frequency plot of IMP expanded clones</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_IMP_Expanded_Frequency_3F_S5B.html#get-session-info",
    "href": "PBMC_bulkTCR_Plot_IMP_Expanded_Frequency_3F_S5B.html#get-session-info",
    "title": "5  bulkTCRseq: Frequency plot of IMP expanded clones",
    "section": "5.6 Get session info",
    "text": "5.6 Get session info\n\nsessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Rocky Linux 8.10 (Green Obsidian)\n\nMatrix products: default\nBLAS/LAPACK: /usr/lib64/libopenblasp-r0.3.15.so;  LAPACK version 3.9.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: America/New_York\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] patchwork_1.3.0 lubridate_1.9.4 forcats_1.0.0   stringr_1.5.1  \n [5] dplyr_1.1.4     purrr_1.0.4     readr_2.1.5     tidyr_1.3.1    \n [9] tibble_3.2.1    ggplot2_3.5.1   tidyverse_2.0.0\n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.6      jsonlite_1.8.9    compiler_4.3.2    tidyselect_1.2.1 \n [5] scales_1.3.0      fastmap_1.2.0     R6_2.6.1          generics_0.1.3   \n [9] knitr_1.49        htmlwidgets_1.6.4 munsell_0.5.1     pillar_1.10.1    \n[13] tzdb_0.5.0        rlang_1.1.5       stringi_1.8.4     xfun_0.50        \n[17] timechange_0.3.0  cli_3.6.3         withr_3.0.2       magrittr_2.0.3   \n[21] digest_0.6.37     grid_4.3.2        rstudioapi_0.17.1 hms_1.1.3        \n[25] lifecycle_1.0.4   vctrs_0.6.5       evaluate_1.0.1    glue_1.8.0       \n[29] farver_2.1.2      colorspace_2.1-1  rmarkdown_2.29    tools_4.3.2      \n[33] pkgconfig_2.0.3   htmltools_0.5.8.1",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>bulkTCRseq: Frequency plot of IMP expanded clones</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_IMP_Expanded_Piechart_3G_S5B.html",
    "href": "PBMC_bulkTCR_Plot_IMP_Expanded_Piechart_3G_S5B.html",
    "title": "6  bulkTCRseq: Pie chart showing percent of IMP-expanded clones",
    "section": "",
    "text": "6.1 Set up workspace\n# Libraries\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ readr     2.1.5\n✔ ggplot2   3.5.1     ✔ stringr   1.5.1\n✔ lubridate 1.9.4     ✔ tibble    3.2.1\n✔ purrr     1.0.4     ✔ tidyr     1.3.1\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(reshape2)\n\n\nAttaching package: 'reshape2'\n\nThe following object is masked from 'package:tidyr':\n\n    smiths\n\nlibrary(ggplot2)\nlibrary(patchwork)\nlibrary(webr)\nlibrary(moonBook)\nlibrary(ggforce)\nlibrary(grid)\nlibrary(ggprism)",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>bulkTCRseq: Pie chart showing percent of IMP-expanded clones</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_IMP_Expanded_Piechart_3G_S5B.html#load-colors",
    "href": "PBMC_bulkTCR_Plot_IMP_Expanded_Piechart_3G_S5B.html#load-colors",
    "title": "6  bulkTCRseq: Pie chart showing percent of IMP-expanded clones",
    "section": "6.2 Load colors",
    "text": "6.2 Load colors\n\npt_cols &lt;- readRDS(\"Part0_Patient_Color.rds\")",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>bulkTCRseq: Pie chart showing percent of IMP-expanded clones</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_IMP_Expanded_Piechart_3G_S5B.html#load-all-clones",
    "href": "PBMC_bulkTCR_Plot_IMP_Expanded_Piechart_3G_S5B.html#load-all-clones",
    "title": "6  bulkTCRseq: Pie chart showing percent of IMP-expanded clones",
    "section": "6.3 Load all clones",
    "text": "6.3 Load all clones\n\np101_betas_typed &lt;- read.csv(\"p101_betas_merged_typed_Part3.csv\")\np103_betas_typed &lt;- read.csv(\"p103_betas_merged_typed_Part3.csv\")\np104_betas_typed &lt;- read.csv(\"p104_betas_merged_typed_Part3.csv\")\np105_betas_typed &lt;- read.csv(\"p105_betas_merged_typed_Part3.csv\")\np106_betas_typed &lt;- read.csv(\"p106_betas_merged_typed_Part3.csv\")\np108_betas_typed &lt;- read.csv(\"p108_betas_merged_typed_Part3.csv\")\np109_betas_typed &lt;- read.csv(\"p109_betas_merged_typed_Part3.csv\")\np110_betas_typed &lt;- read.csv(\"p110_betas_merged_typed_Part3.csv\")\np111_betas_typed &lt;- read.csv(\"p111_betas_merged_typed_Part3.csv\")",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>bulkTCRseq: Pie chart showing percent of IMP-expanded clones</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_IMP_Expanded_Piechart_3G_S5B.html#update-piedonut-code-to-allow-changing-colors",
    "href": "PBMC_bulkTCR_Plot_IMP_Expanded_Piechart_3G_S5B.html#update-piedonut-code-to-allow-changing-colors",
    "title": "6  bulkTCRseq: Pie chart showing percent of IMP-expanded clones",
    "section": "6.4 Update PieDonut code to allow changing colors",
    "text": "6.4 Update PieDonut code to allow changing colors\nCode lifted from: https://stackoverflow.com/questions/68095243/piedonut-how-to-change-color-of-pie-and-donut\n\nPieDonutCustom &lt;- function(pie_cols, donut_cols, data, mapping, start = getOption(\"PieDonut.start\", \n  0), addPieLabel = TRUE, addDonutLabel = TRUE, showRatioDonut = TRUE, \n  showRatioPie = TRUE, ratioByGroup = TRUE, showRatioThreshold = getOption(\"PieDonut.showRatioThreshold\", \n    0.02), labelposition = getOption(\"PieDonut.labelposition\", \n    2), labelpositionThreshold = 0.1, r0 = getOption(\"PieDonut.r0\", \n    0.3), r1 = getOption(\"PieDonut.r1\", 1), r2 = getOption(\"PieDonut.r2\", \n    1.2), explode = NULL, selected = NULL, explodePos = 0.1, \n  color = \"white\", pieAlpha = 0.8, donutAlpha = 1, maxx = NULL, \n  showPieName = TRUE, showDonutName = FALSE, title = NULL, \n  pieLabelSize = 4, donutLabelSize = 3, titlesize = 5, explodePie = TRUE, \n  explodeDonut = FALSE, use.label = FALSE, use.labels = FALSE, \n  family = getOption(\"PieDonut.family\", \"\")) \n{\n  (cols = colnames(data))\n  if (use.labels) \n    data = moonBook::addLabelDf(data, mapping)\n  count &lt;- NULL\n  if (\"count\" %in% names(mapping)) \n    count &lt;- moonBook::getMapping(mapping, \"count\")\n  count\n  pies &lt;- donuts &lt;- NULL\n  (pies = moonBook::getMapping(mapping, \"pies\"))\n  if (is.null(pies)) \n    (pies = moonBook::getMapping(mapping, \"pie\"))\n  if (is.null(pies)) \n    (pies = moonBook::getMapping(mapping, \"x\"))\n  (donuts = moonBook::getMapping(mapping, \"donuts\"))\n  if (is.null(donuts)) \n    (donuts = moonBook::getMapping(mapping, \"donut\"))\n  if (is.null(donuts)) \n    (donuts = moonBook::getMapping(mapping, \"y\"))\n  if (!is.null(count)) {\n    df &lt;- data %&gt;% group_by(.data[[pies]]) %&gt;% dplyr::summarize(Freq = sum(.data[[count]]))\n    df\n  }\n  else {\n    df = data.frame(table(data[[pies]]))\n  }\n  colnames(df)[1] = pies\n  df$end = cumsum(df$Freq)\n  df$start = dplyr::lag(df$end)\n  df$start[1] = 0\n  total = sum(df$Freq)\n  df$start1 = df$start * 2 * pi/total\n  df$end1 = df$end * 2 * pi/total\n  df$start1 = df$start1 + start\n  df$end1 = df$end1 + start\n  df$focus = 0\n  if (explodePie) \n    df$focus[explode] = explodePos\n  df$mid = (df$start1 + df$end1)/2\n  df$x = ifelse(df$focus == 0, 0, df$focus * sin(df$mid))\n  df$y = ifelse(df$focus == 0, 0, df$focus * cos(df$mid))\n  df$label = df[[pies]]\n  df$ratio = df$Freq/sum(df$Freq)\n  if (showRatioPie) {\n    df$label = ifelse(df$ratio &gt;= showRatioThreshold, paste0(df$label, \n      \"\\n(\", scales::percent(df$ratio), \")\"), as.character(df$label))\n  }\n  df$labelx = (r0 + r1)/2 * sin(df$mid) + df$x\n  df$labely = (r0 + r1)/2 * cos(df$mid) + df$y\n  if (!is.factor(df[[pies]])) \n    df[[pies]] &lt;- factor(df[[pies]])\n  df\n  mainCol = pie_cols\n  # mainCol = gg_color_hue(nrow(df))\n  df$radius = r1\n  df$radius[df$focus != 0] = df$radius[df$focus != 0] + df$focus[df$focus != \n    0]\n  df$hjust = ifelse((df$mid%%(2 * pi)) &gt; pi, 1, 0)\n  df$vjust = ifelse(((df$mid%%(2 * pi)) &lt; (pi/2)) | (df$mid%%(2 * \n    pi) &gt; (pi * 3/2)), 0, 1)\n  df$segx = df$radius * sin(df$mid)\n  df$segy = df$radius * cos(df$mid)\n  df$segxend = (df$radius + 0.05) * sin(df$mid)\n  df$segyend = (df$radius + 0.05) * cos(df$mid)\n  df\n  if (!is.null(donuts)) {\n    # subColor = makeSubColor(mainCol, no = length(unique(data[[donuts]])))\n    subColor = donut_cols\n    subColor\n    data\n    if (!is.null(count)) {\n      df3 &lt;- as.data.frame(data[c(donuts, pies, count)])\n      colnames(df3) = c(\"donut\", \"pie\", \"Freq\")\n      df3\n      df3 &lt;- eval(parse(text = \"complete(df3,donut,pie)\"))\n      df3$Freq[is.na(df3$Freq)] = 0\n      if (!is.factor(df3[[1]])) \n        df3[[1]] = factor(df3[[1]])\n      if (!is.factor(df3[[2]])) \n        df3[[2]] = factor(df3[[2]])\n      df3 &lt;- df3 %&gt;% arrange(.data$pie, .data$donut)\n      a &lt;- df3 %&gt;% tidyr::spread(.data$pie, value = .data$Freq)\n      a = as.data.frame(a)\n      a\n      rownames(a) = a[[1]]\n      a = a[-1]\n      a\n      colnames(df3)[1:2] = c(donuts, pies)\n    }\n    else {\n      df3 = data.frame(table(data[[donuts]], data[[pies]]), \n        stringsAsFactors = FALSE)\n      colnames(df3)[1:2] = c(donuts, pies)\n      a = table(data[[donuts]], data[[pies]])\n      a\n    }\n    a\n    df3\n    df3$group = rep(colSums(a), each = nrow(a))\n    df3$pie = rep(1:ncol(a), each = nrow(a))\n    total = sum(df3$Freq)\n    total\n    df3$ratio1 = df3$Freq/total\n    df3\n    if (ratioByGroup) {\n      df3$ratio = scales::percent(df3$Freq/df3$group)\n    }\n    else {\n      df3$ratio &lt;- scales::percent(df3$ratio1)\n    }\n    df3$end = cumsum(df3$Freq)\n    df3\n    df3$start = dplyr::lag(df3$end)\n    df3$start[1] = 0\n    df3$start1 = df3$start * 2 * pi/total\n    df3$end1 = df3$end * 2 * pi/total\n    df3$start1 = df3$start1 + start\n    df3$end1 = df3$end1 + start\n    df3$mid = (df3$start1 + df3$end1)/2\n    df3$focus = 0\n    if (!is.null(selected)) {\n      df3$focus[selected] = explodePos\n    }\n    else if (!is.null(explode)) {\n      selected = c()\n      for (i in 1:length(explode)) {\n        start = 1 + nrow(a) * (explode[i] - 1)\n        selected = c(selected, start:(start + nrow(a) - \n          1))\n      }\n      selected\n      df3$focus[selected] = explodePos\n    }\n    df3\n    df3$x = 0\n    df3$y = 0\n    df\n    if (!is.null(explode)) {\n      explode\n      for (i in 1:length(explode)) {\n        xpos = df$focus[explode[i]] * sin(df$mid[explode[i]])\n        ypos = df$focus[explode[i]] * cos(df$mid[explode[i]])\n        df3$x[df3$pie == explode[i]] = xpos\n        df3$y[df3$pie == explode[i]] = ypos\n      }\n    }\n    df3$no = 1:nrow(df3)\n    df3$label = df3[[donuts]]\n    if (showRatioDonut) {\n      if (max(nchar(levels(df3$label))) &lt;= 2) \n        df3$label = paste0(df3$label, \"(\", df3$ratio, \n          \")\")\n      else df3$label = paste0(df3$label, \"\\n(\", df3$ratio, \n        \")\")\n    }\n    df3$label[df3$ratio1 == 0] = \"\"\n    df3$label[df3$ratio1 &lt; showRatioThreshold] = \"\"\n    df3$hjust = ifelse((df3$mid%%(2 * pi)) &gt; pi, 1, 0)\n    df3$vjust = ifelse(((df3$mid%%(2 * pi)) &lt; (pi/2)) | \n      (df3$mid%%(2 * pi) &gt; (pi * 3/2)), 0, 1)\n    df3$no = factor(df3$no)\n    df3\n    labelposition\n    if (labelposition &gt; 0) {\n      df3$radius = r2\n      if (explodeDonut) \n        df3$radius[df3$focus != 0] = df3$radius[df3$focus != \n          0] + df3$focus[df3$focus != 0]\n      df3$segx = df3$radius * sin(df3$mid) + df3$x\n      df3$segy = df3$radius * cos(df3$mid) + df3$y\n      df3$segxend = (df3$radius + 0.05) * sin(df3$mid) + \n        df3$x\n      df3$segyend = (df3$radius + 0.05) * cos(df3$mid) + \n        df3$y\n      if (labelposition == 2) \n        df3$radius = (r1 + r2)/2\n      df3$labelx = (df3$radius) * sin(df3$mid) + df3$x\n      df3$labely = (df3$radius) * cos(df3$mid) + df3$y\n    }\n    else {\n      df3$radius = (r1 + r2)/2\n      if (explodeDonut) \n        df3$radius[df3$focus != 0] = df3$radius[df3$focus != \n          0] + df3$focus[df3$focus != 0]\n      df3$labelx = df3$radius * sin(df3$mid) + df3$x\n      df3$labely = df3$radius * cos(df3$mid) + df3$y\n    }\n    df3$segx[df3$ratio1 == 0] = 0\n    df3$segxend[df3$ratio1 == 0] = 0\n    df3$segy[df3$ratio1 == 0] = 0\n    df3$segyend[df3$ratio1 == 0] = 0\n    if (labelposition == 0) {\n      df3$segx[df3$ratio1 &lt; showRatioThreshold] = 0\n      df3$segxend[df3$ratio1 &lt; showRatioThreshold] = 0\n      df3$segy[df3$ratio1 &lt; showRatioThreshold] = 0\n      df3$segyend[df3$ratio1 &lt; showRatioThreshold] = 0\n    }\n    df3\n    del = which(df3$Freq == 0)\n    del\n    if (length(del) &gt; 0) \n      subColor &lt;- subColor[-del]\n    subColor\n  }\n  p &lt;- ggplot() + ggforce::theme_no_axes() + coord_fixed()\n  if (is.null(maxx)) {\n    r3 = r2 + 0.3\n  }\n  else {\n    r3 = maxx\n  }\n  p1 &lt;- p + ggforce::geom_arc_bar(aes_string(x0 = \"x\", y0 = \"y\", r0 = as.character(r0), \n    r = as.character(r1), start = \"start1\", end = \"end1\", \n    fill = pies), alpha = pieAlpha, color = color, data = df) + \n    transparent() + scale_fill_manual(values = mainCol) + \n    xlim(r3 * c(-1, 1)) + ylim(r3 * c(-1, 1)) + guides(fill = FALSE)\n  if ((labelposition == 1) & (is.null(donuts))) {\n    p1 &lt;- p1 \n    # + geom_segment(aes_string(x = \"segx\", y = \"segy\", \n    #   xend = \"segxend\", yend = \"segyend\"), data = df) + \n    #   geom_text(aes_string(x = \"segxend\", y = \"segyend\", \n    #     label = \"label\", hjust = \"hjust\", vjust = \"vjust\"), \n    #     size = pieLabelSize, data = df, family = family)\n  }\n  else if ((labelposition == 2) & (is.null(donuts))) {\n    p1 &lt;- p1 \n    # + geom_segment(aes_string(x = \"segx\", y = \"segy\", \n    #   xend = \"segxend\", yend = \"segyend\"), data = df[df$ratio &lt; \n    #   labelpositionThreshold, ]) + geom_text(aes_string(x = \"segxend\", \n    #   y = \"segyend\", label = \"label\", hjust = \"hjust\", \n    #   vjust = \"vjust\"), size = pieLabelSize, data = df[df$ratio &lt; \n    #   labelpositionThreshold, ], family = family) + geom_text(aes_string(x = \"labelx\", \n    #   y = \"labely\", label = \"label\"), size = pieLabelSize, \n    #   data = df[df$ratio &gt;= labelpositionThreshold, ], \n    #   family = family)\n  }\n  else {\n    p1 &lt;- p1 \n    # + geom_text(aes_string(x = \"labelx\", y = \"labely\",\n    #   label = \"label\"), size = pieLabelSize, data = df,\n    #   family = family) + theme(plot.margin = margin(1,2,1,1, \"cm\"))\n  }\n  if (showPieName) \n    p1 &lt;- p1 + annotate(\"text\", x = 0, y = 0, label = pies, \n      size = titlesize, family = family)\n  # p1 &lt;- p1 + theme(text = element_text(family = family))\n    p1 &lt;- p1 + theme(text = element_blank())\n\n  if (!is.null(donuts)) {\n    if (explodeDonut) {\n      p3 &lt;- p + ggforce::geom_arc_bar(aes_string(x0 = \"x\", y0 = \"y\", \n        r0 = as.character(r1), r = as.character(r2), \n        start = \"start1\", end = \"end1\", fill = \"no\", \n        explode = \"focus\"), alpha = donutAlpha, color = color, \n        data = df3)\n    }\n    else {\n      p3 &lt;- p + ggforce::geom_arc_bar(aes_string(x0 = \"x\", y0 = \"y\", \n        r0 = as.character(r1), r = as.character(r2), \n        start = \"start1\", end = \"end1\", fill = \"no\"), \n        alpha = donutAlpha, color = color, data = df3)\n    }\n    p3 &lt;- p3 + transparent() + scale_fill_manual(values = subColor) + \n      xlim(r3 * c(-1, 1)) + ylim(r3 * c(-1, 1)) + guides(fill = FALSE)\n    p3\n    if (labelposition == 1) {\n      p3 &lt;- p3 \n      # + geom_segment(aes_string(x = \"segx\", y = \"segy\", \n      #   xend = \"segxend\", yend = \"segyend\"), data = df3) + \n      #   geom_text(aes_string(x = \"segxend\", y = \"segyend\", \n      #     label = \"label\", hjust = \"hjust\", vjust = \"vjust\"), \n      #     size = donutLabelSize, data = df3, family = family)\n    }\n    else if (labelposition == 0) {\n      p3 &lt;- p3 \n      # + geom_text(aes_string(x = \"labelx\", y = \"labely\", \n      #   label = \"label\"), size = donutLabelSize, data = df3, \n      #   family = family)\n    }\n    else {\n      p3 &lt;- p3 \n      # + geom_segment(aes_string(x = \"segx\", y = \"segy\", \n      #   xend = \"segxend\", yend = \"segyend\"), data = df3[df3$ratio1 &lt; \n      #   labelpositionThreshold, ]) + geom_text(aes_string(x = \"segxend\", \n      #   y = \"segyend\", label = \"label\", hjust = \"hjust\", \n      #   vjust = \"vjust\"), size = donutLabelSize, data = df3[df3$ratio1 &lt; \n      #   labelpositionThreshold, ], family = family) + \n      #   geom_text(aes_string(x = \"labelx\", y = \"labely\", \n      #     label = \"label\"), size = donutLabelSize, data = df3[df3$ratio1 &gt;= \n      #     labelpositionThreshold, ], family = family)\n    }\n    if (!is.null(title)) \n      p3 &lt;- p3 + annotate(\"text\", x = 0, y = r3, label = title, \n        size = titlesize, family = family)\n    else if (showDonutName) \n      p3 &lt;- p3 \n    # + annotate(\"text\", x = (-1) * r3, y = r3, \n    #     label = donuts, hjust = 0, size = titlesize, \n    #     family = family)\n    # p3 &lt;- p3 + theme(text = element_text(family = family), plot.margin = margin(1,2,1,1, \"cm\")) \n     p1 &lt;- p1 + theme(text = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(), plot.margin = margin(1,2,1,1, \"cm\"))\n    p3 &lt;- p3 + theme(text = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(), plot.margin = margin(1,2,1,1, \"cm\")) \n    grid.newpage()\n    print(p1, vp = viewport(height = 1, width = 1))\n    print(p3, vp = viewport(height = 1, width = 1))\n  }\n  else {\n    p1\n  }\n}",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>bulkTCRseq: Pie chart showing percent of IMP-expanded clones</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_IMP_Expanded_Piechart_3G_S5B.html#save-specific-piedonut-customization",
    "href": "PBMC_bulkTCR_Plot_IMP_Expanded_Piechart_3G_S5B.html#save-specific-piedonut-customization",
    "title": "6  bulkTCRseq: Pie chart showing percent of IMP-expanded clones",
    "section": "6.5 Save specific PieDonut customization",
    "text": "6.5 Save specific PieDonut customization\n\nPieDonutSetting &lt;- function(dat, plot_title){\n  PieDonutCustom(data = dat, aes(Type, specific, count=n),\n             ratioByGroup = T,showRatioThreshold=0,\n             explode=0,\n             pie_cols = c(\"grey70\", \"darkgoldenrod3\", \"#0072B2\"),\n             donut_cols = c(\"grey30\", \"#920000FF\" ,\"grey30\" ,\"#920000FF\", \"grey30\", \"#920000FF\"),\n             selected = 6,\n             explodeDonut=TRUE,\n             r0=0,\n             r1=0.5,\n             r2=0.7,\n             showPieName = FALSE,\n             showRatioDonut = FALSE,\n             showDonutName = FALSE,\n             use.label = FALSE,\n             pieAlpha = 1,\n             pieLabelSize = 0,\n             donutLabelSize = 0, title = plot_title)\n}",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>bulkTCRseq: Pie chart showing percent of IMP-expanded clones</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_IMP_Expanded_Piechart_3G_S5B.html#plot-the-expanded-existing-post-nivolumab-and-post-vaccine-clones-as-a-piechart",
    "href": "PBMC_bulkTCR_Plot_IMP_Expanded_Piechart_3G_S5B.html#plot-the-expanded-existing-post-nivolumab-and-post-vaccine-clones-as-a-piechart",
    "title": "6  bulkTCRseq: Pie chart showing percent of IMP-expanded clones",
    "section": "6.6 Plot the expanded Existing, Post-Nivolumab and Post-vaccine clones as a piechart",
    "text": "6.6 Plot the expanded Existing, Post-Nivolumab and Post-vaccine clones as a piechart\n\nfull &lt;- do.call(rbind, list(p101_betas_typed[c(\"Beta_clonotype\", \"expanded_local_min\", \"Type\", \"Patient\")], \n                                         p103_betas_typed[c(\"Beta_clonotype\", \"expanded_local_min\", \"Type\", \"Patient\")],\n                                         p104_betas_typed[c(\"Beta_clonotype\", \"expanded_local_min\", \"Type\", \"Patient\")],\n                                         p105_betas_typed[c(\"Beta_clonotype\", \"expanded_local_min\", \"Type\", \"Patient\")],\n                                         p106_betas_typed[c(\"Beta_clonotype\", \"expanded_local_min\", \"Type\", \"Patient\")],\n                                         p108_betas_typed[c(\"Beta_clonotype\", \"expanded_local_min\", \"Type\", \"Patient\")],\n                                         p109_betas_typed[c(\"Beta_clonotype\", \"expanded_local_min\", \"Type\", \"Patient\")],\n                                         p110_betas_typed[c(\"Beta_clonotype\", \"expanded_local_min\", \"Type\", \"Patient\")],\n                                         p111_betas_typed[c(\"Beta_clonotype\", \"expanded_local_min\", \"Type\", \"Patient\")]))",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>bulkTCRseq: Pie chart showing percent of IMP-expanded clones</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_IMP_Expanded_Piechart_3G_S5B.html#plot-piechart-per-patient-for-fig-s5b",
    "href": "PBMC_bulkTCR_Plot_IMP_Expanded_Piechart_3G_S5B.html#plot-piechart-per-patient-for-fig-s5b",
    "title": "6  bulkTCRseq: Pie chart showing percent of IMP-expanded clones",
    "section": "6.7 Plot piechart per patient for Fig S5B",
    "text": "6.7 Plot piechart per patient for Fig S5B\n\nfull %&gt;%\n  mutate(specific = case_when(expanded_local_min == TRUE ~ \"Specific\",\n                              expanded_local_min == FALSE ~ \"Not specific\")\n         # specific = factor(specific, levels = c(\"Unspecific\", \"Specific\"))\n         ) %&gt;%\n  group_by(Type,specific) %&gt;%\n  filter(Patient == \"P101\",\n         !is.na(specific)) %&gt;%\n  dplyr::count() %&gt;%\n  PieDonutSetting(plot_title = \"P101\")\n\nWarning in `[&lt;-.factor`(`*tmp*`, df3$ratio1 == 0, value = \"\"): invalid factor\nlevel, NA generated\n\n\nWarning in `[&lt;-.factor`(`*tmp*`, df3$ratio1 &lt; showRatioThreshold, value = \"\"):\ninvalid factor level, NA generated\n\n\nWarning: `aes_string()` was deprecated in ggplot2 3.0.0.\nℹ Please use tidy evaluation idioms with `aes()`.\nℹ See also `vignette(\"ggplot2-in-packages\")` for more information.\n\n\nWarning: The `&lt;scale&gt;` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as\nof ggplot2 3.3.4.\n\n\nWarning in ggforce::geom_arc_bar(aes_string(x0 = \"x\", y0 = \"y\", r0 =\nas.character(r1), : Ignoring unknown aesthetics: explode\n\n\n\n\n\n\n\n\nfull %&gt;%\n  mutate(specific = case_when(expanded_local_min == TRUE ~ \"Specific\",\n                              expanded_local_min == FALSE ~ \"Not specific\")\n         # specific = factor(specific, levels = c(\"Unspecific\", \"Specific\"))\n         ) %&gt;%\n  group_by(Type,specific) %&gt;%\n  filter(Patient == \"P103\",\n         !is.na(specific)) %&gt;%\n  dplyr::count() %&gt;%\n  PieDonutSetting(plot_title = \"P103\") \n\nWarning in `[&lt;-.factor`(`*tmp*`, df3$ratio1 == 0, value = \"\"): invalid factor\nlevel, NA generated\n\n\nWarning in `[&lt;-.factor`(`*tmp*`, df3$ratio1 &lt; showRatioThreshold, value = \"\"):\ninvalid factor level, NA generated\n\n\nWarning in ggforce::geom_arc_bar(aes_string(x0 = \"x\", y0 = \"y\", r0 =\nas.character(r1), : Ignoring unknown aesthetics: explode\n\n\n\n\n\n\n\n\nfull %&gt;%\n  mutate(specific = case_when(expanded_local_min == TRUE ~ \"Specific\",\n                              expanded_local_min == FALSE ~ \"Not specific\")\n         # specific = factor(specific, levels = c(\"Unspecific\", \"Specific\"))\n         ) %&gt;%\n  group_by(Type,specific) %&gt;%\n  filter(Patient == \"P104\",\n         !is.na(specific)) %&gt;%\n  dplyr::count() %&gt;%\n  PieDonutCustom(aes(Type, specific, count=n),\n             ratioByGroup = T,showRatioThreshold=0,\n             explode=0,\n             pie_cols = c(\"grey70\", \"darkgoldenrod3\", \"#0072B2\"),\n             # donut_cols = c(\"#CDDAEC\", \"#920000FF\" ,\"#FED6C1\" ,\"#920000FF\", \"#ECECEC\", \"#920000FF\"),\n             donut_cols = c(\"grey30\", \"#920000FF\" ,\"grey30\" ,\"#920000FF\", \"grey30\", \"#920000FF\"),\n             selected = 5,\n             explodeDonut=TRUE,\n             r0=0,\n             r1=0.5,\n             r2=0.7,\n             showPieName = FALSE,\n             showRatioDonut = FALSE,\n             showDonutName = FALSE,\n             use.label = FALSE,\n             pieAlpha = 1,\n             pieLabelSize = 0,\n             donutLabelSize = 5,\n             title = \"P104\")\n\nWarning in `[&lt;-.factor`(`*tmp*`, df3$ratio1 == 0, value = \"\"): invalid factor\nlevel, NA generated\n\n\nWarning in `[&lt;-.factor`(`*tmp*`, df3$ratio1 &lt; showRatioThreshold, value = \"\"):\ninvalid factor level, NA generated\n\n\nWarning in ggforce::geom_arc_bar(aes_string(x0 = \"x\", y0 = \"y\", r0 =\nas.character(r1), : Ignoring unknown aesthetics: explode\n\n\n\n\n\n\n\n\nfull %&gt;%\n  mutate(specific = case_when(expanded_local_min == TRUE ~ \"Specific\",\n                              expanded_local_min == FALSE ~ \"Not specific\")\n         # specific = factor(specific, levels = c(\"Unspecific\", \"Specific\"))\n         ) %&gt;%\n  group_by(Type,specific) %&gt;%\n  filter(Patient == \"P105\",\n         !is.na(specific)) %&gt;%\n  dplyr::count() %&gt;%\n  PieDonutSetting(plot_title = \"P105\")\n\nWarning in `[&lt;-.factor`(`*tmp*`, df3$ratio1 == 0, value = \"\"): invalid factor\nlevel, NA generated\n\n\nWarning in `[&lt;-.factor`(`*tmp*`, df3$ratio1 &lt; showRatioThreshold, value = \"\"):\ninvalid factor level, NA generated\n\n\nWarning in ggforce::geom_arc_bar(aes_string(x0 = \"x\", y0 = \"y\", r0 =\nas.character(r1), : Ignoring unknown aesthetics: explode\n\n\n\n\n\n\n\n\nfull %&gt;%\n  mutate(specific = case_when(expanded_local_min == TRUE ~ \"Specific\",\n                              expanded_local_min == FALSE ~ \"Not specific\")\n         # specific = factor(specific, levels = c(\"Unspecific\", \"Specific\"))\n         ) %&gt;%\n  group_by(Type,specific) %&gt;%\n  filter(Patient == \"P106\",\n         !is.na(specific)) %&gt;%\n  dplyr::count() %&gt;%\n  PieDonutSetting(plot_title = \"P106\")\n\nWarning in `[&lt;-.factor`(`*tmp*`, df3$ratio1 == 0, value = \"\"): invalid factor\nlevel, NA generated\n\n\nWarning in `[&lt;-.factor`(`*tmp*`, df3$ratio1 &lt; showRatioThreshold, value = \"\"):\ninvalid factor level, NA generated\n\n\nWarning in ggforce::geom_arc_bar(aes_string(x0 = \"x\", y0 = \"y\", r0 =\nas.character(r1), : Ignoring unknown aesthetics: explode\n\n\n\n\n\n\n\n\nfull %&gt;%\n  mutate(specific = case_when(expanded_local_min == TRUE ~ \"Specific\",\n                              expanded_local_min == FALSE ~ \"Not specific\")\n         # specific = factor(specific, levels = c(\"Unspecific\", \"Specific\"))\n         ) %&gt;%\n  group_by(Type,specific) %&gt;%\n  filter(Patient == \"P108\",\n         !is.na(specific)) %&gt;%\n  dplyr::count() %&gt;%\n  PieDonutSetting(plot_title = \"P108\")\n\nWarning in `[&lt;-.factor`(`*tmp*`, df3$ratio1 == 0, value = \"\"): invalid factor\nlevel, NA generated\n\n\nWarning in `[&lt;-.factor`(`*tmp*`, df3$ratio1 &lt; showRatioThreshold, value = \"\"):\ninvalid factor level, NA generated\n\n\nWarning in ggforce::geom_arc_bar(aes_string(x0 = \"x\", y0 = \"y\", r0 =\nas.character(r1), : Ignoring unknown aesthetics: explode\n\n\n\n\n\n\n\n\nfull %&gt;%\n  mutate(specific = case_when(expanded_local_min == TRUE ~ \"Specific\",\n                              expanded_local_min == FALSE ~ \"Not specific\")\n         # specific = factor(specific, levels = c(\"Unspecific\", \"Specific\"))\n         ) %&gt;%\n  group_by(Type,specific) %&gt;%\n  filter(Patient == \"P109\",\n         !is.na(specific)) %&gt;%\n  dplyr::count() %&gt;%\n  PieDonutSetting(plot_title = \"P109\")\n\nWarning in `[&lt;-.factor`(`*tmp*`, df3$ratio1 == 0, value = \"\"): invalid factor\nlevel, NA generated\n\n\nWarning in `[&lt;-.factor`(`*tmp*`, df3$ratio1 &lt; showRatioThreshold, value = \"\"):\ninvalid factor level, NA generated\n\n\nWarning in ggforce::geom_arc_bar(aes_string(x0 = \"x\", y0 = \"y\", r0 =\nas.character(r1), : Ignoring unknown aesthetics: explode\n\n\n\n\n\n\n\n\nfull %&gt;%\n  mutate(specific = case_when(expanded_local_min == TRUE ~ \"Specific\",\n                              expanded_local_min == FALSE ~ \"Not specific\")\n         # specific = factor(specific, levels = c(\"Unspecific\", \"Specific\"))\n         ) %&gt;%\n  group_by(Type,specific) %&gt;%\n  filter(Patient == \"P110\",\n         !is.na(specific)) %&gt;%\n  dplyr::count() %&gt;%\n  PieDonutSetting(plot_title = \"P110\")\n\nWarning in `[&lt;-.factor`(`*tmp*`, df3$ratio1 == 0, value = \"\"): invalid factor\nlevel, NA generated\n\n\nWarning in `[&lt;-.factor`(`*tmp*`, df3$ratio1 &lt; showRatioThreshold, value = \"\"):\ninvalid factor level, NA generated\n\n\nWarning in ggforce::geom_arc_bar(aes_string(x0 = \"x\", y0 = \"y\", r0 =\nas.character(r1), : Ignoring unknown aesthetics: explode\n\n\n\n\n\n\n\n\nfull %&gt;%\n  mutate(specific = case_when(expanded_local_min == TRUE ~ \"Specific\",\n                              expanded_local_min == FALSE ~ \"Not specific\")\n         # specific = factor(specific, levels = c(\"Unspecific\", \"Specific\"))\n         ) %&gt;%\n  group_by(Type,specific) %&gt;%\n  filter(Patient == \"P111\",\n         !is.na(specific)) %&gt;%\n  dplyr::count() %&gt;%\n  PieDonutSetting(plot_title = \"P111\")\n\nWarning in `[&lt;-.factor`(`*tmp*`, df3$ratio1 == 0, value = \"\"): invalid factor\nlevel, NA generated\n\n\nWarning in `[&lt;-.factor`(`*tmp*`, df3$ratio1 &lt; showRatioThreshold, value = \"\"):\ninvalid factor level, NA generated\n\n\nWarning in ggforce::geom_arc_bar(aes_string(x0 = \"x\", y0 = \"y\", r0 =\nas.character(r1), : Ignoring unknown aesthetics: explode",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>bulkTCRseq: Pie chart showing percent of IMP-expanded clones</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_IMP_Expanded_Piechart_3G_S5B.html#get-session-info",
    "href": "PBMC_bulkTCR_Plot_IMP_Expanded_Piechart_3G_S5B.html#get-session-info",
    "title": "6  bulkTCRseq: Pie chart showing percent of IMP-expanded clones",
    "section": "6.8 Get session info",
    "text": "6.8 Get session info\n\nsessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Rocky Linux 8.10 (Green Obsidian)\n\nMatrix products: default\nBLAS/LAPACK: /usr/lib64/libopenblasp-r0.3.15.so;  LAPACK version 3.9.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: America/New_York\ntzcode source: system (glibc)\n\nattached base packages:\n[1] grid      stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n [1] ggprism_1.0.5   ggforce_0.4.2   moonBook_0.3.1  webr_0.1.5     \n [5] patchwork_1.3.0 reshape2_1.4.4  lubridate_1.9.4 forcats_1.0.0  \n [9] stringr_1.5.1   purrr_1.0.4     readr_2.1.5     tidyr_1.3.1    \n[13] tibble_3.2.1    ggplot2_3.5.1   tidyverse_2.0.0 dplyr_1.1.4    \n\nloaded via a namespace (and not attached):\n [1] mnormt_2.1.1            rlang_1.1.5             magrittr_2.0.3         \n [4] rio_1.2.3               compiler_4.3.2          systemfonts_1.2.2      \n [7] vctrs_0.6.5             devEMF_4.5              pkgconfig_2.0.3        \n[10] crayon_1.5.3            fastmap_1.2.0           backports_1.5.0        \n[13] labeling_0.4.3          promises_1.3.2          rmarkdown_2.29         \n[16] tzdb_0.5.0              ragg_1.3.3              xfun_0.50              \n[19] cachem_1.1.0            jsonlite_1.8.9          later_1.4.1            \n[22] sjmisc_2.8.10           uuid_1.2-1              tweenr_2.0.3           \n[25] psych_2.5.3             broom_1.0.8             parallel_4.3.2         \n[28] R6_2.6.1                bslib_0.8.0             stringi_1.8.4          \n[31] vcd_1.4-13              RColorBrewer_1.1-3      car_3.1-3              \n[34] lmtest_0.9-40           jquerylib_0.1.4         Rcpp_1.0.14            \n[37] knitr_1.49              zoo_1.8-13              httpuv_1.6.15          \n[40] timechange_0.3.0        tidyselect_1.2.1        rstudioapi_0.17.1      \n[43] abind_1.4-8             miniUI_0.1.1.1          sjlabelled_1.2.0       \n[46] lattice_0.22-7          plyr_1.8.9              shiny_1.9.1            \n[49] rrtable_0.3.0           withr_3.0.2             flextable_0.9.7        \n[52] askpass_1.2.1           evaluate_1.0.1          polyclip_1.10-7        \n[55] zip_2.3.2               xml2_1.3.8              pillar_1.10.1          \n[58] ggpubr_0.6.0            carData_3.0-5           DT_0.33                \n[61] insight_0.20.3          generics_0.1.3          hms_1.1.3              \n[64] munsell_0.5.1           scales_1.3.0            xtable_1.8-4           \n[67] glue_1.8.0              gdtools_0.4.2           tools_4.3.2            \n[70] data.table_1.15.4       openxlsx_4.2.8          ggsignif_0.6.4         \n[73] editData_0.1.8          colorspace_2.1-1        nlme_3.1-168           \n[76] Formula_1.2-5           cli_3.6.3               textshaping_1.0.0      \n[79] rvg_0.3.3               officer_0.6.8           fontBitstreamVera_0.1.1\n[82] ztable_0.2.3            gtable_0.3.6            rstatix_0.7.2          \n[85] sass_0.4.9              digest_0.6.37           fontquiver_0.2.1       \n[88] htmlwidgets_1.6.4       farver_2.1.2            htmltools_0.5.8.1      \n[91] lifecycle_1.0.4         shinyWidgets_0.9.0      mime_0.13              \n[94] fontLiberation_0.1.0    openssl_2.3.1           MASS_7.3-60.0.1",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>bulkTCRseq: Pie chart showing percent of IMP-expanded clones</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_IMP_Expanded_Ridge_Bar_3H.html",
    "href": "PBMC_bulkTCR_Plot_IMP_Expanded_Ridge_Bar_3H.html",
    "title": "7  bulkTCRseq: IMP-expanded clones Repertoire Fraction",
    "section": "",
    "text": "7.1 Set up workspace\n# Libraries\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ readr     2.1.5\n✔ ggplot2   3.5.1     ✔ stringr   1.5.1\n✔ lubridate 1.9.4     ✔ tibble    3.2.1\n✔ purrr     1.0.4     ✔ tidyr     1.3.1\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(Seurat)\n\nLoading required package: SeuratObject\nLoading required package: sp\n\nAttaching package: 'SeuratObject'\n\nThe following objects are masked from 'package:base':\n\n    intersect, t\n\nlibrary(ggvenn)\n\nLoading required package: grid\n\nlibrary(ggridges)",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>bulkTCRseq: IMP-expanded clones Repertoire Fraction</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_IMP_Expanded_Ridge_Bar_3H.html#load-patient-colors",
    "href": "PBMC_bulkTCR_Plot_IMP_Expanded_Ridge_Bar_3H.html#load-patient-colors",
    "title": "7  bulkTCRseq: IMP-expanded clones Repertoire Fraction",
    "section": "7.2 Load patient colors",
    "text": "7.2 Load patient colors\n\npt_cols &lt;- readRDS(\"Part0_Patient_Color.rds\")\npt_fill &lt;- readRDS(\"Part0_Patient_Fill.rds\")",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>bulkTCRseq: IMP-expanded clones Repertoire Fraction</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_IMP_Expanded_Ridge_Bar_3H.html#open-bulktcr-typed-clones",
    "href": "PBMC_bulkTCR_Plot_IMP_Expanded_Ridge_Bar_3H.html#open-bulktcr-typed-clones",
    "title": "7  bulkTCRseq: IMP-expanded clones Repertoire Fraction",
    "section": "7.3 Open bulkTCR typed clones",
    "text": "7.3 Open bulkTCR typed clones\n\np101_betas_typed &lt;- read.csv(\"p101_betas_merged_typed_Part3.csv\")\np103_betas_typed &lt;- read.csv(\"p103_betas_merged_typed_Part3.csv\")\np104_betas_typed &lt;- read.csv(\"p104_betas_merged_typed_Part3.csv\")\np105_betas_typed &lt;- read.csv(\"p105_betas_merged_typed_Part3.csv\")\np106_betas_typed &lt;- read.csv(\"p106_betas_merged_typed_Part3.csv\")\np108_betas_typed &lt;- read.csv(\"p108_betas_merged_typed_Part3.csv\")\np109_betas_typed &lt;- read.csv(\"p109_betas_merged_typed_Part3.csv\")\np110_betas_typed &lt;- read.csv(\"p110_betas_merged_typed_Part3.csv\")\np111_betas_typed &lt;- read.csv(\"p111_betas_merged_typed_Part3.csv\")\n\nbetas_typed &lt;- list(p101_betas_typed = p101_betas_typed,\n                    p103_betas_typed = p103_betas_typed,\n                    p104_betas_typed = p104_betas_typed,\n                    p105_betas_typed = p105_betas_typed,\n                    p106_betas_typed = p106_betas_typed,\n                    p108_betas_typed = p108_betas_typed,\n                    p109_betas_typed = p109_betas_typed,\n                    p110_betas_typed = p110_betas_typed,\n                    p111_betas_typed = p111_betas_typed)",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>bulkTCRseq: IMP-expanded clones Repertoire Fraction</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_IMP_Expanded_Ridge_Bar_3H.html#compare-the-distribution-of-imp-expanded-vs-non-expanded-clones",
    "href": "PBMC_bulkTCR_Plot_IMP_Expanded_Ridge_Bar_3H.html#compare-the-distribution-of-imp-expanded-vs-non-expanded-clones",
    "title": "7  bulkTCRseq: IMP-expanded clones Repertoire Fraction",
    "section": "7.4 Compare the distribution of IMP-expanded vs non-expanded clones",
    "text": "7.4 Compare the distribution of IMP-expanded vs non-expanded clones\n\n# Collect the columns of interest and rename\nselect_postvax_cols &lt;- function(df){\n  postvax &lt;- df[,grep(\".*postvax($|_umi)\", colnames(df))]\n  colnames(postvax) &lt;- c(\"postvax_freq\", \"postvax_umi\")\n  df &lt;- df[, c(\"Beta_clonotype\", \"Type\", \"Patient\", \"expanded_local_min\")]\n  df &lt;- cbind(df, postvax)\n  return(df)\n}\n\npostvax_tp.list &lt;- lapply(betas_typed, select_postvax_cols)\n\npostvax_tp &lt;- do.call(rbind, postvax_tp.list)",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>bulkTCRseq: IMP-expanded clones Repertoire Fraction</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_IMP_Expanded_Ridge_Bar_3H.html#plot-the-frequency-of-imp-expanded-clones-after-vaccination-for-fig-3h-middle",
    "href": "PBMC_bulkTCR_Plot_IMP_Expanded_Ridge_Bar_3H.html#plot-the-frequency-of-imp-expanded-clones-after-vaccination-for-fig-3h-middle",
    "title": "7  bulkTCRseq: IMP-expanded clones Repertoire Fraction",
    "section": "7.5 Plot the frequency of IMP-expanded clones after vaccination for Fig 3H middle",
    "text": "7.5 Plot the frequency of IMP-expanded clones after vaccination for Fig 3H middle\n\np1 &lt;- postvax_tp %&gt;%\n  filter(expanded_local_min == TRUE) %&gt;% \n  mutate(Patient = factor(Patient, levels = c(\"P101\", \"P104\", \"P109\", \"P108\", \"P105\", \"P111\", \"P106\", \"P110\", \"P103\"))) %&gt;%\n  ggplot(aes(x = postvax_freq, y = Patient, fill = Patient)) +\n  geom_density_ridges(alpha = 0.5, scale = 1) +\n  scale_x_log10() +\n  pt_fill +\n  theme_classic() +\n  xlab(\"Frequency of IMP-expanded \\nclones after vaccination\\n\")\n\nn_expanded_postvax &lt;- postvax_tp %&gt;%\n  filter(expanded_local_min == TRUE) %&gt;%\n  group_by(Patient) %&gt;%\n  dplyr::count() %&gt;%\n  mutate(Patient = factor(Patient, levels = c(\"P101\", \"P104\", \"P109\", \"P108\", \"P105\", \"P111\", \"P106\", \"P110\", \"P103\")),\n         x = 0.08,\n         n = paste0(\"n=\",n))\n\np1 + geom_text(data = n_expanded_postvax, \n              aes(y = as.numeric(Patient) + 0.1, x = x, label = n),\n              position=position_nudge(y= .25), \n              colour=\"black\", \n              size=3.5)\n\nPicking joint bandwidth of 0.111",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>bulkTCRseq: IMP-expanded clones Repertoire Fraction</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_IMP_Expanded_Ridge_Bar_3H.html#plot-clonal-dominance-of-imp-expanded-clones-after-vaccination-for-fig-3h-right",
    "href": "PBMC_bulkTCR_Plot_IMP_Expanded_Ridge_Bar_3H.html#plot-clonal-dominance-of-imp-expanded-clones-after-vaccination-for-fig-3h-right",
    "title": "7  bulkTCRseq: IMP-expanded clones Repertoire Fraction",
    "section": "7.6 Plot clonal dominance of IMP-expanded clones after vaccination for Fig 3H right",
    "text": "7.6 Plot clonal dominance of IMP-expanded clones after vaccination for Fig 3H right\n\nfct_expanded &lt;- postvax_tp %&gt;%\n  group_by(Patient, expanded_local_min, Type) %&gt;%\n  summarize(sum = sum(postvax_freq)) %&gt;%\n  pivot_wider(names_from = \"expanded_local_min\", values_from = sum) %&gt;%\n  dplyr::rename(\"Nonexpanded\" = \"FALSE\",\n                \"Expanded\" = \"TRUE\") %&gt;%\n  replace(is.na(.), 0) %&gt;%\n  mutate(fct_expanded = Expanded/(Expanded+Nonexpanded))\n\n`summarise()` has grouped output by 'Patient', 'expanded_local_min'. You can\noverride using the `.groups` argument.\n\nfct_expanded %&gt;%\n  group_by(Type) %&gt;%\n  summarize(median(fct_expanded)*100)\n\n# A tibble: 3 × 2\n  Type           `median(fct_expanded) * 100`\n  &lt;chr&gt;                                 &lt;dbl&gt;\n1 Existing                              0.435\n2 Post-Nivolumab                        0.327\n3 Post-Vaccine                         40.8  \n\np2 &lt;- fct_expanded %&gt;%\n  mutate(Patient = factor(Patient, levels = c(\"P103\", \"P110\" , \"P106\" , \"P111\" , \"P105\" , \"P108\", \"P109\" , \"P104\", \"P101\"))) %&gt;%\n  ggplot(aes(x = fct_expanded, y = Type, fill = Type)) +\n  geom_col(color = \"#920000FF\", size = 1) +\n  facet_wrap(facets = ~factor(Patient, ), ncol = 1, strip.position = \"right\") +\n  scale_x_continuous(breaks=c(0, 0.5)) +\n  scale_y_discrete(expand = c(0.5, 0)) +\n  ylab(\"Fraction of the repertoire after vaccination\") +\n  xlab(\"Fraction of the repertoire\\nafter vaccination\") +\n  theme_classic() +\n  scale_fill_manual(values = c(\"#B3B3B3\", \"#CD950C\", \"#0072B2\"), name = \"Type of IMP-\\nexpanded clone\") +\n  theme(axis.title=element_text(size=10),\n        axis.ticks.y = element_blank(),\n        axis.text.y = element_blank())\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\np2",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>bulkTCRseq: IMP-expanded clones Repertoire Fraction</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_IMP_Expanded_Ridge_Bar_3H.html#get-session-info",
    "href": "PBMC_bulkTCR_Plot_IMP_Expanded_Ridge_Bar_3H.html#get-session-info",
    "title": "7  bulkTCRseq: IMP-expanded clones Repertoire Fraction",
    "section": "7.7 Get session info",
    "text": "7.7 Get session info\n\nsessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Rocky Linux 8.10 (Green Obsidian)\n\nMatrix products: default\nBLAS/LAPACK: /usr/lib64/libopenblasp-r0.3.15.so;  LAPACK version 3.9.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: America/New_York\ntzcode source: system (glibc)\n\nattached base packages:\n[1] grid      stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n [1] ggridges_0.5.6     ggvenn_0.1.10      Seurat_5.1.0       SeuratObject_5.0.2\n [5] sp_2.2-0           lubridate_1.9.4    forcats_1.0.0      stringr_1.5.1     \n [9] purrr_1.0.4        readr_2.1.5        tidyr_1.3.1        tibble_3.2.1      \n[13] ggplot2_3.5.1      tidyverse_2.0.0    dplyr_1.1.4       \n\nloaded via a namespace (and not attached):\n  [1] deldir_2.0-4           pbapply_1.7-2          gridExtra_2.3         \n  [4] rlang_1.1.5            magrittr_2.0.3         RcppAnnoy_0.0.22      \n  [7] spatstat.geom_3.3-2    matrixStats_1.5.0      compiler_4.3.2        \n [10] png_0.1-8              vctrs_0.6.5            reshape2_1.4.4        \n [13] pkgconfig_2.0.3        fastmap_1.2.0          utf8_1.2.4            \n [16] promises_1.3.2         rmarkdown_2.29         tzdb_0.5.0            \n [19] xfun_0.50              jsonlite_1.8.9         goftest_1.2-3         \n [22] later_1.4.1            spatstat.utils_3.1-0   irlba_2.3.5.1         \n [25] parallel_4.3.2         cluster_2.1.8.1        R6_2.6.1              \n [28] ica_1.0-3              spatstat.data_3.1-2    stringi_1.8.4         \n [31] RColorBrewer_1.1-3     reticulate_1.42.0      spatstat.univar_3.0-0 \n [34] parallelly_1.41.0      lmtest_0.9-40          scattermore_1.2       \n [37] Rcpp_1.0.14            knitr_1.49             tensor_1.5            \n [40] future.apply_1.11.3    zoo_1.8-13             sctransform_0.4.1     \n [43] httpuv_1.6.15          Matrix_1.6-5           splines_4.3.2         \n [46] igraph_2.0.3           timechange_0.3.0       tidyselect_1.2.1      \n [49] abind_1.4-8            rstudioapi_0.17.1      spatstat.random_3.3-1 \n [52] spatstat.explore_3.3-2 codetools_0.2-20       miniUI_0.1.1.1        \n [55] listenv_0.9.1          lattice_0.22-7         plyr_1.8.9            \n [58] shiny_1.9.1            withr_3.0.2            ROCR_1.0-11           \n [61] evaluate_1.0.1         Rtsne_0.17             future_1.34.0         \n [64] fastDummies_1.7.5      survival_3.8-3         polyclip_1.10-7       \n [67] fitdistrplus_1.2-2     pillar_1.10.1          KernSmooth_2.23-26    \n [70] plotly_4.10.4          generics_0.1.3         RcppHNSW_0.6.0        \n [73] hms_1.1.3              munsell_0.5.1          scales_1.3.0          \n [76] globals_0.16.3         xtable_1.8-4           glue_1.8.0            \n [79] lazyeval_0.2.2         tools_4.3.2            data.table_1.15.4     \n [82] RSpectra_0.16-2        RANN_2.6.2             leiden_0.4.3.1        \n [85] dotCall64_1.2          cowplot_1.1.3          colorspace_2.1-1      \n [88] nlme_3.1-168           patchwork_1.3.0        cli_3.6.3             \n [91] spatstat.sparse_3.1-0  spam_2.11-1            viridisLite_0.4.2     \n [94] uwot_0.2.3             gtable_0.3.6           digest_0.6.37         \n [97] progressr_0.15.1       ggrepel_0.9.5          htmlwidgets_1.6.4     \n[100] farver_2.1.2           htmltools_0.5.8.1      lifecycle_1.0.4       \n[103] httr_1.4.7             mime_0.13              MASS_7.3-60.0.1",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>bulkTCRseq: IMP-expanded clones Repertoire Fraction</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_Vax_Specific_Clone_Frequency_S8G.html",
    "href": "PBMC_bulkTCR_Plot_Vax_Specific_Clone_Frequency_S8G.html",
    "title": "8  bulkTCRseq: Plot the frequency of vax-specific clones",
    "section": "",
    "text": "8.1 Set up workspace\nlibrary(geomtextpath)\n\nLoading required package: ggplot2\n\nlibrary(ggrepel)\nlibrary(xlsx)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ lubridate 1.9.4     ✔ tibble    3.2.1\n✔ purrr     1.0.4     ✔ tidyr     1.3.1\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(dplyr)",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>bulkTCRseq: Plot the frequency of vax-specific clones</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_Vax_Specific_Clone_Frequency_S8G.html#load-vax-specific-clones",
    "href": "PBMC_bulkTCR_Plot_Vax_Specific_Clone_Frequency_S8G.html#load-vax-specific-clones",
    "title": "8  bulkTCRseq: Plot the frequency of vax-specific clones",
    "section": "8.2 Load vax-specific clones",
    "text": "8.2 Load vax-specific clones\n\ntcr_names &lt;- read.xlsx(\"/jsimonlab/users/chloetu/melanoma/Melanoma_Eryn/analysis_093024/Eryn_reactivity_results/EB_TCR to reconstructed 23Jul24.xlsx\", sheetIndex = 1)\nreactivity &lt;- read.csv(\"/jsimonlab/users/chloetu/melanoma/Melanoma_Eryn/analysis_093024/Eryn_reactivity_results/reformatted_reconstructed_TCR_072324.csv\") %&gt;%\n  left_join(tcr_names, by = c(\"TRAV_1\", \"TRAJ_1\", \"CDR3A_1\", \"TRBV_1\", \"TRBJ_1\", \"CDR3B_1\", \"Reactive\")) %&gt;%\n  mutate(Beta_clonotype = paste0(TRBV_1, \";\", TRBJ_1, \";\", CDR3B_1),\n         `TCR.` = paste0(\"TCR\", `TCR.`),\n         Patient = paste0(\"P\", Patient)) %&gt;%\n  select(Beta_clonotype, Patient, `TCR.`)\n  \nreactivity %&gt;%\n  dplyr::count(Patient)\n\n  Patient  n\n1    P101 19\n2    P103 14\n3    P104 32\n4    P108 31",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>bulkTCRseq: Plot the frequency of vax-specific clones</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_Vax_Specific_Clone_Frequency_S8G.html#load-data",
    "href": "PBMC_bulkTCR_Plot_Vax_Specific_Clone_Frequency_S8G.html#load-data",
    "title": "8  bulkTCRseq: Plot the frequency of vax-specific clones",
    "section": "8.3 Load data",
    "text": "8.3 Load data\n\np101_betas &lt;- read.csv(\"p101_betas_merged_typed_full_Part3.csv\")\np103_betas &lt;- read.csv(\"p103_betas_merged_typed_full_Part3.csv\")\np104_betas &lt;- read.csv(\"p104_betas_merged_typed_full_Part3.csv\")\np108_betas &lt;- read.csv(\"p108_betas_merged_typed_full_Part3.csv\")",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>bulkTCRseq: Plot the frequency of vax-specific clones</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_Vax_Specific_Clone_Frequency_S8G.html#select-reactive-clones",
    "href": "PBMC_bulkTCR_Plot_Vax_Specific_Clone_Frequency_S8G.html#select-reactive-clones",
    "title": "8  bulkTCRseq: Plot the frequency of vax-specific clones",
    "section": "8.4 Select reactive clones",
    "text": "8.4 Select reactive clones\n\np101_betas_reactive &lt;- p101_betas %&gt;%\n  filter(Reactive == TRUE) %&gt;%\n  left_join(reactivity, by = c(\"Beta_clonotype\", \"Patient\"))\np103_betas_reactive &lt;- p103_betas %&gt;%\n  filter(Reactive == TRUE) %&gt;%\n  left_join(reactivity, by = c(\"Beta_clonotype\", \"Patient\"))\np104_betas_reactive &lt;- p104_betas %&gt;%\n  filter(Reactive == TRUE) %&gt;%\n  left_join(reactivity, by = c(\"Beta_clonotype\", \"Patient\"))\np108_betas_reactive &lt;- p108_betas %&gt;%\n  filter(Reactive == TRUE) %&gt;%\n  left_join(reactivity, by = c(\"Beta_clonotype\", \"Patient\"))",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>bulkTCRseq: Plot the frequency of vax-specific clones</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_Vax_Specific_Clone_Frequency_S8G.html#massage-data-for-frequency-lineplot",
    "href": "PBMC_bulkTCR_Plot_Vax_Specific_Clone_Frequency_S8G.html#massage-data-for-frequency-lineplot",
    "title": "8  bulkTCRseq: Plot the frequency of vax-specific clones",
    "section": "8.5 Massage data for frequency lineplot",
    "text": "8.5 Massage data for frequency lineplot\n\np101_lineplot_data &lt;- p101_betas_reactive %&gt;%\n  select(c(Beta_clonotype, p101_pretreatment, p101_prevax, p101_postvax, Reactive, Type, `TCR.`)) %&gt;%\n  dplyr::rename(\"Pre-treatment\" = \"p101_pretreatment\", \"Pre-vax\" = \"p101_prevax\", \"Post-vax\" = \"p101_postvax\") %&gt;% \n  pivot_longer(!c(Beta_clonotype, Reactive, Type, `TCR.`), names_to = \"Timepoint\", values_to = \"Frequency\") %&gt;%\n  mutate(Timepoint = factor(Timepoint, levels = c(\"Pre-treatment\", \"Pre-vax\", \"Post-vax\")))\n\np103_lineplot_data &lt;- p103_betas_reactive %&gt;%\n  select(c(Beta_clonotype, p103_pretreatment, p103_prevax, p103_postvax, p103_w48, p103_w72, Reactive, Type, `TCR.`)) %&gt;%\n  dplyr::rename(\"Pre-treatment\" = \"p103_pretreatment\", \"Pre-vax\" = \"p103_prevax\", \"Post-vax\" = \"p103_postvax\", \"W48\" = \"p103_w48\", \"W72\" = \"p103_w72\") %&gt;% \n  pivot_longer(!c(Beta_clonotype, Reactive, Type, `TCR.`), names_to = \"Timepoint\", values_to = \"Frequency\") %&gt;%\n  mutate(Timepoint = factor(Timepoint, levels = c(\"Pre-treatment\", \"Pre-vax\", \"Post-vax\", \"W48\", \"W72\")))\n\np104_lineplot_data &lt;- p104_betas_reactive %&gt;%\n  select(c(Beta_clonotype, p104_pretreatment, p104_prevax, p104_postvax, p104_w48, Reactive, Type, `TCR.`)) %&gt;%\n  dplyr::rename(\"Pre-treatment\" = \"p104_pretreatment\", \"Pre-vax\" = \"p104_prevax\", \"Post-vax\" = \"p104_postvax\", \"W48\" = \"p104_w48\") %&gt;% \n  pivot_longer(!c(Beta_clonotype, Reactive, Type, `TCR.`), names_to = \"Timepoint\", values_to = \"Frequency\") %&gt;%\n  mutate(Timepoint = factor(Timepoint, levels = c(\"Pre-treatment\", \"Pre-vax\", \"Post-vax\", \"W48\")))\n\np108_lineplot_data &lt;- p108_betas_reactive %&gt;%\n  select(c(Beta_clonotype, p108_pretreatment, p108_prevax, p108_postvax, p108_w32, Reactive, Type, `TCR.`)) %&gt;%\n  dplyr::rename(\"Pre-treatment\" = \"p108_pretreatment\", \"Pre-vax\" = \"p108_prevax\", \"Post-vax\" = \"p108_postvax\", \"W32\" = \"p108_w32\") %&gt;% \n  pivot_longer(!c(Beta_clonotype, Reactive, Type, `TCR.`), names_to = \"Timepoint\", values_to = \"Frequency\") %&gt;%\n  mutate(Timepoint = factor(Timepoint, levels = c(\"Pre-treatment\", \"Pre-vax\", \"Post-vax\", \"W32\")))",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>bulkTCRseq: Plot the frequency of vax-specific clones</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_Vax_Specific_Clone_Frequency_S8G.html#objects-for-the-lod-lines",
    "href": "PBMC_bulkTCR_Plot_Vax_Specific_Clone_Frequency_S8G.html#objects-for-the-lod-lines",
    "title": "8  bulkTCRseq: Plot the frequency of vax-specific clones",
    "section": "8.6 Objects for the LOD lines",
    "text": "8.6 Objects for the LOD lines\n\nindiv_lod_line &lt;- geom_hline(yintercept = 0.0001, linetype = \"dashed\", color = \"red\")\np101_lod_annot &lt;- annotate(\"text\", x = as.numeric(p101_lineplot_data$Timepoint[[3]]) + 0.25, y = 0.00015, label = \"LOD\", size = 4, color = \"red\")\np103_lod_annot &lt;- annotate(\"text\", x = as.numeric(p103_lineplot_data$Timepoint[[5]]) + 0.25, y = 0.00016, label = \"LOD\", size = 4, color = \"red\")\np104_lod_annot &lt;- annotate(\"text\", x = as.numeric(p104_lineplot_data$Timepoint[[4]]) + 0.25, y = 0.00013, label = \"LOD\", size = 4, color = \"red\")\np108_lod_annot &lt;- annotate(\"text\", x = as.numeric(p108_lineplot_data$Timepoint[[4]]) + 0.25, y = 0.00017, label = \"LOD\", size = 4, color = \"red\")",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>bulkTCRseq: Plot the frequency of vax-specific clones</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_Vax_Specific_Clone_Frequency_S8G.html#plot-frequency-plots-for-fig-s8g",
    "href": "PBMC_bulkTCR_Plot_Vax_Specific_Clone_Frequency_S8G.html#plot-frequency-plots-for-fig-s8g",
    "title": "8  bulkTCRseq: Plot the frequency of vax-specific clones",
    "section": "8.7 Plot frequency plots for Fig S8G",
    "text": "8.7 Plot frequency plots for Fig S8G\n\np101_lineplot_data %&gt;%\n  ggplot(aes(x = Timepoint, y = Frequency, color = `Type`, group = `TCR.`, label = `TCR.`)) +\n  geom_textline(size = 3, fontface = 1, hjust = 0.95, vjust = -0.05) +\n  scale_color_manual(values = c(\"grey70\", \"#0072B2\")) +\n  scale_y_log10() +\n  annotation_logticks(sides = \"l\") +\n  theme_classic() +\n  theme(plot.title = element_text(hjust=0.5),\n        axis.text.x = element_text(size = 7)) +\n  indiv_lod_line +\n  p101_lod_annot\n\n\n\n\n\n\n\np103_lineplot_data %&gt;%\n  ggplot(aes(x = Timepoint, y = Frequency, color = `Type`, group = `TCR.`, label = `TCR.`)) +\n  geom_textline(size = 3, fontface = 1, hjust = 0.98, vjust = -0.05) +\n  scale_color_manual(values = c(\"darkgoldenrod3\", \"#0072B2\")) +\n  scale_y_log10() +\n  annotation_logticks(sides = \"l\") +\n  theme_classic() +\n  theme(plot.title = element_text(hjust=0.5),\n        axis.text.x = element_text(size = 7)) +\n  indiv_lod_line +\n  p103_lod_annot\n\n\n\n\n\n\n\np104_lineplot_data %&gt;%\n  ggplot(aes(x = Timepoint, y = Frequency, color = `Type`, group = `TCR.`, label = `TCR.`)) +\n  geom_textline(size = 3, fontface = 1, aes(hjust = 0.9), vjust = -0.05) +\n  scale_color_manual(values = c(\"grey70\", \"#0072B2\")) +\n  scale_y_log10() +\n  annotation_logticks(sides = \"l\") +\n  theme_classic() +\n  theme(plot.title = element_text(hjust=0.5),\n        axis.text.x = element_text(size = 7)) +\n  indiv_lod_line +\n  p104_lod_annot\n\n\n\n\n\n\n\np108_lineplot_data %&gt;%\n  ggplot(aes(x = Timepoint, y = Frequency, color = `Type`, group = `TCR.`, label = `TCR.`)) +\n  geom_textline(size = 3, fontface = 1, hjust = 0.95, vjust = -0.05) +\n  scale_color_manual(values = c(\"#0072B2\")) +\n  scale_y_log10() +\n  annotation_logticks(sides = \"l\") +\n  theme_classic() +\n  theme(plot.title = element_text(hjust=0.5),\n        axis.text.x = element_text(size = 7)) +\n  indiv_lod_line +\n  p108_lod_annot",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>bulkTCRseq: Plot the frequency of vax-specific clones</span>"
    ]
  },
  {
    "objectID": "PBMC_bulkTCR_Plot_Vax_Specific_Clone_Frequency_S8G.html#get-session-info",
    "href": "PBMC_bulkTCR_Plot_Vax_Specific_Clone_Frequency_S8G.html#get-session-info",
    "title": "8  bulkTCRseq: Plot the frequency of vax-specific clones",
    "section": "8.8 Get session info",
    "text": "8.8 Get session info\n\nsessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Rocky Linux 8.10 (Green Obsidian)\n\nMatrix products: default\nBLAS/LAPACK: /usr/lib64/libopenblasp-r0.3.15.so;  LAPACK version 3.9.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8          LC_NUMERIC=C                 \n [3] LC_TIME=en_US.UTF-8           LC_COLLATE=en_US.UTF-8       \n [5] LC_MONETARY=en_US.UTF-8       LC_MESSAGES=en_US.UTF-8      \n [7] LC_PAPER=en_US.UTF-8          LC_NAME=en_US.UTF-8          \n [9] LC_ADDRESS=en_US.UTF-8        LC_TELEPHONE=en_US.UTF-8     \n[11] LC_MEASUREMENT=en_US.UTF-8    LC_IDENTIFICATION=en_US.UTF-8\n\ntime zone: America/New_York\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] lubridate_1.9.4    forcats_1.0.0      stringr_1.5.1      dplyr_1.1.4       \n [5] purrr_1.0.4        readr_2.1.5        tidyr_1.3.1        tibble_3.2.1      \n [9] tidyverse_2.0.0    xlsx_0.6.5         ggrepel_0.9.5      geomtextpath_0.1.5\n[13] ggplot2_3.5.1     \n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.6      jsonlite_1.8.9    compiler_4.3.2    tidyselect_1.2.1 \n [5] Rcpp_1.0.14       systemfonts_1.2.2 scales_1.3.0      textshaping_1.0.0\n [9] fastmap_1.2.0     R6_2.6.1          generics_0.1.3    knitr_1.49       \n[13] htmlwidgets_1.6.4 munsell_0.5.1     tzdb_0.5.0        pillar_1.10.1    \n[17] rlang_1.1.5       stringi_1.8.4     xfun_0.50         timechange_0.3.0 \n[21] cli_3.6.3         withr_3.0.2       magrittr_2.0.3    digest_0.6.37    \n[25] grid_4.3.2        rstudioapi_0.17.1 rJava_1.0-11      hms_1.1.3        \n[29] lifecycle_1.0.4   vctrs_0.6.5       evaluate_1.0.1    glue_1.8.0       \n[33] farver_2.1.2      xlsxjars_0.6.1    colorspace_2.1-1  rmarkdown_2.29   \n[37] tools_4.3.2       pkgconfig_2.0.3   htmltools_0.5.8.1",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>bulkTCRseq: Plot the frequency of vax-specific clones</span>"
    ]
  }
]